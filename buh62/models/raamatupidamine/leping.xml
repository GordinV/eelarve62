<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>select d.*
         from cur_lepingud d         
         where d.rekvId = $1 
         and docs.usersRigths(d.id, 'select', $2)
         order by d.number</sql>
    <alias>curLepingud</alias>
  </grid>
  <select>
    <sql>select d.id, $2::integer as userid, to_char(created, 'DD.MM.YYYY HH:MM:SS')::text as created, 
                to_char(lastupdate,'DD.MM.YYYY HH:MM:SS')::text as lastupdate, d.bpm, 
                 trim(l.nimetus) as doc, trim(l.kood) as doc_type_id,
                 trim(s.nimetus) as status, d.status as doc_status,
                 trim(a.number)::varchar(20) as number, a.rekvId, 
                 a.kpv as kpv, 
                 a.asutusid,
                 a.selgitus, 
                 a.doklausid,                
                 a.tahtaeg, 
                 a.dok, 
                 a.pakettid,
                 a.objektid,
                 a.muud,
                 (d.history-&gt;0-&gt;&gt;'user')::varchar(120)                                          AS koostaja
                 from docs.doc d 
                 inner join libs.library l on l.id = d.doc_type_id 
                 inner join docs.leping1 a on a.parentId = d.id 
                 left outer join libs.library s on s.library = 'STATUS' and s.kood = d.status::text 
                 inner join libs.asutus as asutus on asutus.id = a.asutusId 
                 inner join ou.userid u on u.id = $2::integer 
                 where d.id = $1</sql>
    <sqlAsNew>select $1::integer as id, $2::integer as userid,  
                    to_char(now(), 'DD.MM.YYYY HH:MM:SS')::text as created, 
                    to_char(now(), 'DD.MM.YYYY HH:MM:SS')::text as lastupdate, null as bpm,
                 trim(l.nimetus) as doc, trim(l.kood) as doc_type_id, 
                 trim(s.nimetus) as status, 0 as doc_status, 
                 docs.sp_get_number(u.rekvId, 'LEPING', year(date()), null)::varchar(20) as number, 
                 null as rekvId, 
                 now()::date as kpv,
                 5 as doklausid,
                 null as asutusid, 
                 null::text as selgitus, 
                 (now()  + interval '365 days')::date as tahtaeg, 
                 null::text as dok, 
                 null::integer as pakettid, 
                 null::integer as objektId,
                 null::text as muud
                 from libs.library l,   libs.library s, ou.userid u  
                 where l.library = 'DOK' and l.kood = 'LEPING' 
                 and u.id = $2::integer 
                 and s.library = 'STATUS' and s.kood = '0'</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <select>
    <sql>select a1.id, $2::integer as userid, 
                 a1.nomid, a1.kogus, a1.hind, a1.kbm, a1.summa,
                 trim(n.kood)::varchar(20) as kood, trim(n.nimetus)::varchar(254) as nimetus,
                 a1.soodus,
                 a1.soodusalg::date,
                 a1.sooduslopp::date,
                 a1.status,
                 a1.formula,
                 a1.muud
                 from docs.leping2 as a1 
                 inner join docs.leping1 a on a.id = a1.parentId 
                 inner join libs.nomenklatuur n on n.id = a1.nomId 
                 inner join ou.userid u on u.id = $2::integer 
                 where a.parentid = $1::integer</sql>
    <query />
    <multiple>true</multiple>
    <alias>details</alias>
  </select>
  <select>
    <sql>select rd.id, $2::integer as userid, trim(l.kood) as doc_type, trim(l.nimetus) as name 
                 from docs.doc d 
                 left outer join docs.doc rd on rd.id in (select unnest(d.docs_ids)) 
                 left outer join libs.library l on rd.doc_type_id = l.id 
                 inner join ou.userid u on u.id = $2::integer 
                 where d.id = $1::integer</sql>
    <query />
    <multiple>true</multiple>
    <alias>relations</alias>
  </select>
  <selectAsLibs>
    <sql></sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select docs.sp_salvesta_leping($1, $2, $3) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>select error_code, result, error_message from docs.sp_delete_leping($1, $2)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>kpv,tahtaeg,asutusid,kogus</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql>select * from docs.sp_calc_viivised($1::integer, $2::JSON)</sql>
    <alias>calcViivised</alias>
  </executeCommand>
  <register>
    <sql>update docs.doc set status = 1 where id = $1</sql>
    <alias />
  </register>
  <endProcess>
    <sql>update docs.doc set status = 2 where id = $1</sql>
    <alias />
  </endProcess>
  <generateJournal>
    <sql />
    <alias />
  </generateJournal>
  <print>
    <sql>SELECT DISTINCT
                  $2                                                              AS user_id,
                  l.id,
                  l.kood,
                  l.nomid,
                  left(rtrim(l.asutus) || ' ' || rtrim(nimetus), 120) :: VARCHAR AS nimetus,
                  l.objektid,
                  l.pakettId,
                  l.tahtaeg
                FROM wizlepingud l
                WHERE l.rekvId = $1</sql>
    <alias>wizlepingud</alias>
  </print>
</VFPData>
