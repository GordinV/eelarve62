<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>SELECT
                          d.*
                        FROM palk.cur_palkoper d
                        WHERE d.rekvId = $1
                              AND coalesce(docs.usersRigths(d.id, 'select', $2), TRUE)</sql>
    <alias>curPalkOper</alias>
  </grid>
  <select>
    <sql>SELECT
                      d.id,
                      d.docs_ids,
                      (to_char(d.created, 'DD.MM.YYYY HH:MM:SS')) :: TEXT    AS created,
                      (to_char(d.lastupdate, 'DD.MM.YYYY HH:MM:SS')) :: TEXT AS lastupdate,
                      d.bpm,
                      trim(l.nimetus)                                        AS doc,
                      trim(l.kood)                                           AS doc_type_id,
                      trim(s.nimetus)                                        AS status,
                      p.kpv                                                  AS kpv,
                      p.rekvid,
                      p.libid,
                      p.lepingid,
                      p.summa,
                      p.tululiik,
                      p.journalid,
                      p.muud,
                      p.kood1,
                      p.kood2,
                      p.kood3,
                      p.kood4,
                      p.kood5,
                      p.konto,
                      p.tp,
                      p.tunnus,
                      p.proj,
                      p.tulumaks,
                      p.sotsmaks,
                      p.tootumaks,
                      p.pensmaks,
                      p.tulubaas,
                      p.tka,
                      p.period,
                      p.pohjus,
                      coalesce((dp.details :: JSONB -&gt;&gt; 'konto'), '') :: VARCHAR(20) AS korr_konto,
                      dp.selg :: VARCHAR(120)                                AS dokprop,
                      (case when empty(dp.registr::integer) then 0 else 1 end)::integer as kas_lausend,                      
                      p.doklausid                                            AS dokpropid,
                      coalesce(jid.number, 0) :: INTEGER                     AS lausend,
                      t.parentid,
                      (pl.properties::jsonb-&gt;&gt;'liik')::integer as liik,
                      (pl.properties::jsonb-&gt;&gt;'asutusest')::integer as asutusest                                             
                    FROM docs.doc d
                      INNER JOIN palk.palk_oper p ON p.parentId = d.id
                      INNER JOIN palk.tooleping t ON t.id = p.lepingid
                      INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                      INNER JOIN libs.asutus a ON a.id = t.parentid
                      LEFT OUTER JOIN libs.library pl ON pl.id = p.libid
                      LEFT OUTER JOIN libs.library l ON l.id = d.doc_type_id
                      LEFT OUTER JOIN libs.library s ON s.library = 'STATUS' AND s.kood = d.status :: TEXT
                      LEFT OUTER JOIN libs.dokprop dp ON dp.id = p.doklausid
                      LEFT OUTER JOIN docs.doc dj ON p.journalid = dj.id
                      LEFT OUTER JOIN docs.journal j ON j.parentid = dj.id
                      LEFT OUTER JOIN docs.journalid jid ON jid.journalid = j.id
                    WHERE d.id = $1</sql>
    <sqlAsNew>SELECT
                          $1 :: INTEGER                                 AS id,
                          $2 :: INTEGER                                 AS userid,
                          to_char(now(), 'DD.MM.YYYY HH:MM:SS') :: TEXT AS created,
                          to_char(now(), 'DD.MM.YYYY HH:MM:SS') :: TEXT AS lastupdate,
                          NULL                                          AS bpm,
                          'PALK_OPER'                                   AS doc_type_id,
                          1                                             AS status,
                          NULL :: INTEGER                               AS rekvId,
                          null::integer as lepingid,
                          null::integer as libid,
                          now() :: DATE                                 AS kpv,
                          NULL :: TEXT                                  AS selg,
                          NULL :: TEXT                                  AS muud,
                          0 :: NUMERIC(12, 2)                           AS summa,
                          NULL :: INTEGER                               AS journalid,
                          NULL :: VARCHAR(20)                           AS tululiik,
                          NULL :: VARCHAR(20)                           AS kood1,
                          NULL :: VARCHAR(20)                           AS kood2,
                          NULL :: VARCHAR(20)                           AS kood3,
                          NULL :: VARCHAR(20)                           AS kood4,
                          NULL :: VARCHAR(20)                           AS kood5,
                          NULL :: VARCHAR(20)                           AS konto,
                          NULL :: VARCHAR(20)                           AS proj,
                          NULL :: VARCHAR(20)                           AS tp,
                          NULL :: VARCHAR(20)                           AS tunnus,
                          0 :: NUMERIC(12, 2)                           AS tulumaks,
                          0 :: NUMERIC(12, 2)                           AS sotsmaks,
                          0 :: NUMERIC(12, 2)                           AS tootumaks,
                          0 :: NUMERIC(12, 2)                           AS pensmaks,
                          0 :: NUMERIC(12, 2)                           AS tulubaas,
                          0 :: NUMERIC(12, 2)                           AS tka,
                          NULL :: DATE                                  AS period,
                          NULL :: TEXT                                  AS pohjus,
                          NULL :: INTEGER                               AS journalid,
                          null :: VARCHAR(20)                           AS korr_konto,
                          null :: VARCHAR(120)                          AS dokprop,                          
                          NULL :: INTEGER                               AS dokpropid,
                          0::integer                                AS kas_lausend,
                          NULL::INTEGER                                 AS parentid,
                          1                                             AS liik,
                          NULL :: INTEGER                               AS lausend</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <select>
    <sql>SELECT
                      rd.id,
                      $2 :: INTEGER   AS userid,
                      trim(l.kood)    AS doc_type,
                      trim(l.nimetus) AS name
                    FROM docs.doc d
                      LEFT OUTER JOIN docs.doc rd ON rd.id IN (SELECT unnest(d.docs_ids))
                      LEFT OUTER JOIN libs.library l ON rd.doc_type_id = l.id
                      INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                    WHERE d.id = $1</sql>
    <query />
    <multiple>true</multiple>
    <alias>relations</alias>
  </select>
  <selectAsLibs>
    <sql></sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select palk.sp_salvesta_palk_oper($1, $2, $3) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>select error_code, result, error_message from palk.sp_delete_palk_oper($1, $2)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>kpv,lepingid,libid,summa</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql>select result, error_code, error_message, data from sp_execute_task($1::integer, $2::JSON, $3::TEXT )</sql>
    <alias>executeTask</alias>
  </executeCommand>
  <register>
    <sql></sql>
    <alias></alias>
  </register>
  <endProcess>
    <sql />
    <alias />
  </endProcess>
  <generateJournal>
    <sql>select error_code, result, error_message from docs.gen_lausend_avans($2, $1)</sql>
    <alias>generateJournal</alias>
  </generateJournal>
  <print></print>
</VFPData>
