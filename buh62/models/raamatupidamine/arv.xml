<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>SELECT id,
                           arv_id,
                           number :: VARCHAR(20),
                           rekvid,
                           kpv,
                           summa,
                           tahtaeg,
                           jaak,
                           lisa,
                           tasud,
                           tasudok,
                           userid,
                           asutus :: VARCHAR(254),
                           regkood::varchar(20),
                           omvorm::varchar(20),
                           aadress::text, 
                           email::VARCHAR(254),
                           asutusid,
                           journalid,
                           liik,
                           ametnik,
                           objektid,
                           objekt :: VARCHAR(254),
                           markused,
                           lausnr,
                           docs_ids,
                           coalesce(a.arve,qry_aa.arve)::varchar(20)  AS aa,
                           a.viitenr::varchar(120)
                    FROM cur_arved a,
                         (SELECT arve
                          FROM ou.aa aa
                          WHERE aa.parentid = $1
                            AND NOT empty(default_::INTEGER)
                            AND NOT empty(kassa::INTEGER)
                          LIMIT 1) qry_aa
                    WHERE a.rekvId = $1::INTEGER
                      AND docs.usersRigths(a.id, 'select', $2::INTEGER)</sql>
    <alias>curArved</alias>
  </grid>
  <select>
    <sql>SELECT d.id,
                         $2 :: INTEGER                                                    AS userid,
                         to_char(created, 'DD.MM.YYYY HH:MM:SS') :: TEXT                   AS created,
                         to_char(lastupdate, 'DD.MM.YYYY HH:MM:SS') :: TEXT                AS lastupdate,
                         d.bpm,
                         trim(l.nimetus)                                                   AS doc,
                         trim(l.kood)                                                      AS doc_type_id,
                         trim(s.nimetus)                                                   AS status,
                         d.status                                                          AS doc_status,
                         trim(a.number) :: VARCHAR(20)                                     AS number,
                         a.summa,
                         a.rekvId,
                         a.liik,
                         a.operid,
                         a.kpv                                                             AS kpv,
                         a.asutusid,
                         a.arvId,
                         trim(coalesce(a.lisa, '')) :: VARCHAR(120)                        AS lisa,
                         a.tahtaeg                                                         AS tahtaeg,
                         a.kbmta,
                         a.kbm,
                         a.summa,
                         a.tasud,
                         trim(a.tasudok)                                                   AS tasudok,
                         a.muud,
                         a.jaak,
                         coalesce(a.objektId,0)::integer as objektId,
                         trim(a.objekt)                                                    AS objekt,
                         asutus.regkood,
                         trim(asutus.nimetus)                                              AS asutus,
                         asutus.aadress,
                         (asutus.properties -&gt;&gt; 'kmkr') :: VARCHAR(20)                     AS kmkr,
                         a.doklausid,
                         a.journalid,
                         coalesce(jid.number, 0) :: INTEGER                                AS laus_nr,
                         coalesce((dp.details :: JSONB -&gt;&gt; 'konto'), '') :: VARCHAR(20)    AS konto,
                         coalesce((dp.details :: JSONB -&gt;&gt; 'kbmkonto'), '') :: VARCHAR(20) AS kbmkonto,
                         dp.selg :: VARCHAR(120)                                           AS dokprop,
                         dp.vaatalaus                                                      AS is_show_journal,
                         (d.history -&gt; 0 -&gt;&gt; 'user') :: VARCHAR(120)                       AS koostaja,
                         coalesce((a.properties -&gt;&gt; 'aa')::text,qry_aa.arve)::varchar(20)  AS aa,
                         coalesce((a.properties -&gt;&gt; 'viitenr')::text,'')::varchar(120)     AS viitenr
                  FROM docs.doc d
                         INNER JOIN libs.library l ON l.id = d.doc_type_id
                         INNER JOIN docs.arv a ON a.parentId = d.id
                         INNER JOIN libs.asutus AS asutus ON asutus.id = a.asutusId
                         INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                         LEFT OUTER JOIN libs.library s ON s.library = 'STATUS' AND s.kood = d.status :: TEXT
                         LEFT OUTER JOIN libs.dokprop dp ON dp.id = a.doklausid
                         LEFT OUTER JOIN docs.journal j ON j.parentid = a.journalid
                         LEFT OUTER JOIN docs.journalid jid ON jid.journalid = j.id,
                         (SELECT arve
                                          FROM ou.aa aa
                                          inner join ou.userid u on u.id = $2 :: INTEGER
                                          WHERE aa.parentid = u.rekvid
                                            AND NOT empty(default_::INTEGER)
                                            AND NOT empty(kassa::INTEGER)
                                          LIMIT 1) qry_aa
                  WHERE d.id = $1</sql>
    <sqlAsNew>SELECT $1 :: INTEGER                                                         AS id,
                              $2 :: INTEGER                                                         AS userid,
                              to_char(now(), 'DD.MM.YYYY HH:MM:SS') :: TEXT                          AS created,
                              to_char(now(), 'DD.MM.YYYY HH:MM:SS') :: TEXT                          AS lastupdate,
                              NULL                                                                   AS bpm,
                              trim(l.nimetus)                                                        AS doc,
                              trim(l.kood)                                                           AS doc_type_id,
                              trim(s.nimetus)                                                        AS status,
                              0                                                                      AS doc_status,
                              (SELECT arve
                               FROM ou.aa aa
                               WHERE aa.parentid = u.rekvid
                                 AND NOT empty(default_::INTEGER)
                                 AND NOT empty(kassa::INTEGER)
                               LIMIT 1)::VARCHAR(20)                                                 AS aa,

                              docs.sp_get_number(u.rekvId, 'ARV', year(date()), NULL) :: VARCHAR(20) AS number,
                              0.00                                                                   AS summa,
                              NULL :: INTEGER                                                        AS rekvId,
                              0                                                                      AS liik,
                              NULL :: INTEGER                                                        AS operid,
                              now() :: DATE                                                          AS kpv,
                              NULL :: INTEGER                                                        AS asutusid,
                              NULL :: INTEGER                                                        AS arvId,
                              '' :: VARCHAR(120)                                                     AS lisa,
                              (now() + INTERVAL '14 days') :: DATE                                   AS tahtaeg,
                              0 :: NUMERIC                                                           AS kbmta,
                              0.00 :: NUMERIC                                                        AS kbm,
                              0 :: NUMERIC(14, 2)                                                    AS summa,
                              NULL :: DATE                                                           AS tasud,
                              NULL :: VARCHAR(20)                                                    AS tasudok,
                              NULL :: TEXT                                                           AS muud,
                              0.00                                                                   AS jaak,
                              0 :: INTEGER                                                        AS objektId,
                              NULL :: VARCHAR(20)                                                    AS objekt,
                              NULL :: VARCHAR(20)                                                    AS regkood,
                              NULL :: VARCHAR(120)                                                   AS asutus,
                              NULL :: TEXT                                                           AS aadress,
                              NULL :: VARCHAR(120)                                                   AS kmkr,
                              NULL :: INTEGER                                                        AS doklausid,
                              NULL :: VARCHAR(120)                                                   AS dokprop,
                              NULL :: TEXT                                                           AS konto,
                              NULL :: TEXT                                                           AS kbmkonto,
                              NULL :: INTEGER                                                        AS journalid,
                              NULL :: INTEGER                                                        AS laus_nr,
                              NULL :: VARCHAR(120)                                                   AS koostaja,
                              0 ::INTEGER                                                            AS is_show_journal,
                              ''::varchar(120) as viitenr
                       FROM libs.library l,
                            libs.library s,
                            ou.userid u
                       WHERE l.library = 'DOK'
                         AND l.kood = 'ARV'
                         AND u.id = $2 :: INTEGER
                         AND s.library = 'STATUS'
                         AND s.kood = '0'</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <select>
    <sql>SELECT a1.id,
                         $2 :: INTEGER                                                  AS userid,
                         a1.nomid,
                         a1.kogus,
                         a1.hind,
                         a1.kbm,
                         a1.kbmta,
                         a1.summa,
                         trim(n.kood) :: VARCHAR(20)                                     AS kood,
                         trim(n.nimetus) :: VARCHAR(254)                                 AS nimetus,
                         a1.soodus,
                         a1.kood1,
                         a1.kood2,
                         a1.kood3,
                         a1.kood4,
                         a1.kood5,
                         a1.tunnus,
                         a1.proj,
                         a1.konto,
                         a1.tp,
                         NULL :: TEXT                                                    AS vastisik,
                         NULL :: TEXT                                                    AS formula,
                         'EUR' :: VARCHAR(20)                                            AS valuuta,
                         1 :: NUMERIC                                                    AS kuurs,
                         coalesce((n.properties :: JSONB -&gt;&gt; 'vat'), '-') :: VARCHAR(20) AS km,
                         n.uhik,
                         a1.muud
                  FROM docs.arv1 AS a1
                         INNER JOIN docs.arv a ON a.id = a1.parentId
                         INNER JOIN libs.nomenklatuur n ON n.id = a1.nomId
                         INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                  WHERE a.parentid = $1 :: INTEGER</sql>
    <query />
    <multiple>true</multiple>
    <alias>details</alias>
  </select>
  <select>
    <sql>SELECT rd.id, $2 :: INTEGER AS userid, trim(l.kood) AS doc_type, trim(l.nimetus) AS name
                  FROM docs.doc d
                         LEFT OUTER JOIN docs.doc rd ON rd.id IN (SELECT unnest(d.docs_ids))
                         LEFT OUTER JOIN libs.library l ON rd.doc_type_id = l.id
                         INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                  WHERE d.id = $1 :: INTEGER</sql>
    <query />
    <multiple>true</multiple>
    <alias>relations</alias>
  </select>
  <select>
    <sql>SELECT Arvtasu.id,
                         arvtasu.kpv,
                         arvtasu.summa,
                         'MK' :: VARCHAR(20)           AS dok,
                         'PANK' :: VARCHAR             AS liik,
                         pankkassa,
                         mk1.journalid,
                         doc_tasu_id,
                         coalesce(journalid.number, 0) AS number,
                         'EUR' :: VARCHAR              AS valuuta,
                         1 :: NUMERIC                  AS kuurs
                  FROM docs.arvtasu arvtasu
                         INNER JOIN docs.mk mk ON (arvtasu.doc_tasu_id = mk.parentid AND arvtasu.pankkassa = 1)
                         INNER JOIN docs.mk1 mk1 ON (mk.id = mk1.parentid)
                         LEFT OUTER JOIN docs.journalid journalid ON mk1.journalId = journalId.journalId
                  WHERE Arvtasu.doc_arv_id = $1
                    AND arvtasu.summa &lt;&gt; 0
                    AND arvtasu.status &lt;&gt; 3
                  UNION ALL
                  SELECT Arvtasu.id,
                         arvtasu.kpv,
                         arvtasu.summa,
                         'KASSAORDER' :: VARCHAR(20)   AS dok,
                         'KASSA' :: VARCHAR            AS liik,
                         pankkassa,
                         korder1.journalid,
                         doc_tasu_id,
                         coalesce(journalid.number, 0) AS number,
                         'EUR' :: VARCHAR              AS valuuta,
                         1 :: NUMERIC                  AS kuurs
                  FROM docs.arvtasu arvtasu
                         INNER JOIN docs.korder1 korder1
                                    ON (arvtasu.doc_tasu_id = korder1.parentid AND arvtasu.pankkassa = 2)
                         LEFT OUTER JOIN docs.journalid journalid ON korder1.journalId = journalId.journalId
                  WHERE Arvtasu.doc_arv_id = $1
                    AND arvtasu.summa &lt;&gt; 0
                    AND arvtasu.status &lt;&gt; 3
                  UNION ALL
                  SELECT Arvtasu.id,
                         arvtasu.kpv,
                         arvtasu.summa,
                         'PAEVARAAMAT' :: VARCHAR(20)  AS dok,
                         'JOURNAL' :: VARCHAR          AS liik,
                         pankkassa,
                         arvtasu.doc_tasu_id           AS journalid,
                         doc_tasu_id,
                         coalesce(journalid.number, 0) AS number,
                         'EUR' :: VARCHAR              AS valuuta,
                         1 :: NUMERIC                  AS kuurs
                  FROM docs.arvtasu arvtasu
                         LEFT OUTER JOIN docs.journal journal
                                         ON (arvtasu.doc_tasu_id = journal.parentId AND arvtasu.pankkassa = 3)
                         LEFT OUTER JOIN docs.journalid journalid ON (journal.id = journalId.journalId)
                  WHERE Arvtasu.doc_arv_id = $1
                    AND arvtasu.summa &lt;&gt; 0
                    AND arvtasu.status &lt;&gt; 3
                    AND arvtasu.pankkassa = 3
                  UNION ALL
                  SELECT Arvtasu.id,
                         arvtasu.kpv,
                         arvtasu.summa,
                         '' :: VARCHAR(20) AS dok,
                         'MUUD' :: VARCHAR AS liik,
                         pankkassa,
                         0                 AS journalid,
                         NULL,
                         0                 AS number,
                         'EUR' :: VARCHAR  AS valuuta,
                         1 :: NUMERIC      AS kuurs
                  FROM docs.arvtasu arvtasu
                  WHERE Arvtasu.doc_arv_id = $1
                    AND arvtasu.summa &lt;&gt; 0
                    AND arvtasu.status &lt;&gt; 3
                    AND arvtasu.pankkassa IN (0, 4)

            </sql>
    <query />
    <multiple>true</multiple>
    <alias>queryArvTasu</alias>
  </select>
  <select>
    <sql>SELECT result, error_code, error_message
                  FROM docs.create_new_mk($1::integer, $2::jsonb)</sql>
    <query />
    <multuple>false</multuple>
    <alias>create_new_mk</alias>
  </select>
  <select>
    <sql>SELECT result, error_code, error_message
                  FROM docs.create_new_order($1::integer, $2::jsonb)</sql>
    <query />
    <multuple>false</multuple>
    <alias>create_new_order</alias>
  </select>
  <select>
    <sql>SELECT docs.check_arv_number($1::integer, $2::JSON)::integer as tulemus</sql>
    <query />
    <multuple>false</multuple>
    <alias>validate_arve_number</alias>
  </select>
  <selectAsLibs>
    <sql>SELECT *
                   FROM com_arved a
                   WHERE (a.rekvId = $1::INTEGER)
                     AND docs.usersRigths(a.id, 'select', $2::INTEGER)</sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select docs.sp_salvesta_arv($1::json, $2::integer, $3::integer) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>SELECT error_code, result, error_message
                FROM docs.sp_delete_arv($1::INTEGER, $2::INTEGER)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>kpv,tahtaeg,asutusid,summa</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql>select docs.sp_kooperi_arv($1::integer, $2::integer) as result</sql>
    <alias>kooperiArv</alias>
  </executeCommand>
  <register>
    <sql>UPDATE docs.doc
                  SET status = 1
                  WHERE id = $1</sql>
    <alias />
  </register>
  <endProcess>
    <sql>UPDATE docs.doc SET status = 2 WHERE id = $1</sql>
    <alias />
  </endProcess>
  <generateJournal>
    <sql>SELECT error_code, result, error_message FROM docs.gen_lausend_arv($2::INTEGER, $1::INTEGER)</sql>
    <alias>generateJournal</alias>
  </generateJournal>
  <print></print>
</VFPData>
