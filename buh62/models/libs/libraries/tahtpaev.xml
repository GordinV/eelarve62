<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>select 
                $2::integer as userId, *
                from cur_tahtpaevad l       
                where (l.rekvId = $1 or l.rekvid is null)</sql>
    <alias>curHoliday</alias>
  </grid>
  <select>
    <sql>select l.id, l.rekvid, l.kood, l.nimetus, l.status, l.library, 
                $2::integer as userid, 'TAHTPAEV' as doc_type_id,
                (l.properties::JSONB -&gt;&gt; 'paev') :: integer as paev,
                (l.properties::JSONB -&gt;&gt; 'kuu') :: integer as kuu,
                (l.properties::JSONB -&gt;&gt; 'aasta') :: integer as aasta,
                (l.properties::JSONB -&gt;&gt; 'luhipaev') :: integer as luhipaev,
                l.muud                 
                from libs.library l 
                where l.id = $1</sql>
    <sqlAsNew>select  $1::integer as id , 
            $2::integer as userid, 
            'TAHTPAEV' as doc_type_id,
            ''::text as  kood,
            0::integer as rekvid,
            ''::text as nimetus,
            'TAHTPAEV'::text as library,
            1::integer as paev,
            1::integer as kuu,
            year(current_date)::integer as aasta,
            0::integer as luhipaev,
            0::integer as status,
            null::text as muud</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <selectAsLibs>
    <sql></sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select libs.sp_salvesta_tahtpaev($1::json, $2::integer, $3::integer) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>select error_code, result, error_message from libs.sp_delete_library($1::integer, $2::integer)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>nimetus,paev,kuu,nimetus,library</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql></sql>
    <alias></alias>
  </executeCommand>
  <register>
    <sql></sql>
    <alias></alias>
  </register>
  <endProcess>
    <sql />
    <alias />
  </endProcess>
  <generateJournal>
    <sql />
    <alias />
  </generateJournal>
  <print></print>
  <getLog>
    <sql>SELECT ROW_NUMBER() OVER ()              AS id,
                         (ajalugu -&gt;&gt; 'user')::VARCHAR(20) AS kasutaja,
                         coalesce(to_char((ajalugu -&gt;&gt; 'created')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)         AS koostatud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'updated')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)         AS muudatud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'print')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)         AS prinditud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'deleted')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)         AS kustutatud

                  FROM (SELECT $2                                                      AS user_id,
                               jsonb_array_elements(jsonb_agg(jsonb_build_object('updated', propertis -&gt;&gt; 'updated', 'user',
                                                            ltrim(rtrim(u.kasutaja))))) AS ajalugu
                        FROM ou.logs l
                                 LEFT OUTER JOIN ou.userid u ON u.id = l.user_id
                        WHERE propertis -&gt;&gt; 'table' = 'library'
                          AND doc_id = $1) qry
        </sql>
    <alias>getLogs</alias>
  </getLog>
</VFPData>
