<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>SELECT
                          d.*
                        FROM cur_luba d
                        WHERE d.rekvId = $1
                              AND coalesce(docs.usersRigths(d.id, 'select', $2), TRUE)</sql>
    <alias>curReklLuba</alias>
  </grid>
  <select>
    <sql>SELECT
                      d.id,
                      d.docs_ids,
                      (to_char(d.created, 'DD.MM.YYYY HH:MM:SS')) :: TEXT    AS created,
                      (to_char(d.lastupdate, 'DD.MM.YYYY HH:MM:SS')) :: TEXT AS lastupdate,
                      d.bpm,
                      trim(t.nimetus)                                        AS doc,
                      trim(t.kood)                                           AS doc_type_id,
                      trim(s.nimetus)                                        AS status,
                      l.number                                               AS number,
                      l.rekvid,
                      l.asutusid,
                      l.muud                                                 AS muud,
                      l.algkpv,
                      l.loppkpv,
                      l.summa,
                      l.jaak,
                      l.volg,
                      l.alus,
                      l.staatus,
                      l.kord,
                      l.intress
                    FROM docs.doc d
                      INNER JOIN rekl.luba l ON l.parentId = d.id
                      INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                      INNER JOIN libs.asutus a ON a.id = l.asutusid
                      LEFT OUTER JOIN libs.library t ON t.id = d.doc_type_id
                      LEFT OUTER JOIN libs.library s ON s.library = 'STATUS' AND s.kood = d.status :: TEXT
                    WHERE d.id = $1</sql>
    <sqlAsNew>SELECT
                          $1 :: INTEGER                                  AS id,
                          $2 :: INTEGER                                  AS userid,
                          to_char(now(), 'DD.MM.YYYY HH:MM:SS') :: TEXT AS created,
                          to_char(now(), 'DD.MM.YYYY HH:MM:SS') :: TEXT AS lastupdate,
                          NULL                                          AS bpm,
                          trim(t.nimetus)                               AS doc,
                          trim(t.kood)                                  AS doc_type_id,
                          trim(s.nimetus)                               AS status,
                          coalesce((SELECT max(val(array_to_string(regexp_match(number, '\d+'), '')))
                                    FROM rekl.luba
                                    WHERE rekvid IN (
                                      SELECT rekvid
                                      FROM ou.userid
                                      WHERE id = $2)
                                   ) :: INTEGER, 0) :: INTEGER + 1      AS number,
                          NULL :: INTEGER                               AS rekvId,
                          NULL :: INTEGER                               AS asutusid,
                          NULL :: TEXT                                  AS muud,
                          now() :: DATE                                 AS algkpv,
                          date(year(current_date), 12, 31)              AS loppkpv,
                          0 :: NUMERIC                                  AS summa,
                          0 :: NUMERIC                                  AS jaak,
                          0 :: NUMERIC                                  AS volg,
                          NULL :: VARCHAR                               AS alus,
                          0                                             AS staatus,
                          0                                             AS kord,
                          0 :: NUMERIC                                  AS intress
                        FROM libs.library t,
                          libs.library s,
                          (SELECT *
                           FROM ou.userid u
                           WHERE u.id = $2 :: INTEGER) AS u
                        WHERE t.library = 'DOK' AND t.kood = 'LUBA'
                              AND u.id = $2 :: INTEGER
                              AND s.library = 'STATUS' AND s.kood = '0'</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <select>
    <sql>SELECT
                      $2 :: INTEGER                             AS userid,
                      trim(n.kood)::varchar(20)                              AS kood,
                      trim(n.nimetus)::varchar(254)                           AS nimetus,
                      l1.*,
                      null::varchar(20) as liik,
                      null::varchar(20) as SOODUSTYYP
                    FROM rekl.luba AS l
                      INNER JOIN rekl.luba1 l1 ON l1.parentid = l.Id
                      INNER JOIN libs.nomenklatuur n ON n.id = l1.nomid
                    WHERE l.parentid = $1</sql>
    <query />
    <multiple>true</multiple>
    <alias>details</alias>
  </select>
  <select>
    <sql>SELECT
                      rd.id,
                      $2 :: INTEGER   AS userid,
                      trim(l.kood)    AS doc_type,
                      trim(l.nimetus) AS name
                    FROM docs.doc d
                      LEFT OUTER JOIN docs.doc rd ON rd.id IN (SELECT unnest(d.docs_ids))
                      LEFT OUTER JOIN libs.library l ON rd.doc_type_id = l.id
                      INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                    WHERE d.id = $1</sql>
    <query />
    <multiple>true</multiple>
    <alias>relations</alias>
  </select>
  <selectAsLibs>
    <sql></sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select rekl.sp_salvesta_luba($1, $2, $3) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>select error_code, result, error_message from rekl.sp_delete_luba($1, $2)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>algkpv,loppkpv,asutusid,summa,number</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql>select * from sp_execute_task($1::integer, $2::JSON, $3::TEXT )</sql>
    <alias>executeTask</alias>
  </executeCommand>
  <register>
    <sql>update docs.doc set status = 1 where id = $1</sql>
    <alias />
  </register>
  <endProcess>
    <sql>update docs.doc set status = 2 where id = $1</sql>
    <alias />
  </endProcess>
  <generateJournal>
    <sql />
    <alias />
  </generateJournal>
  <print></print>
</VFPData>
