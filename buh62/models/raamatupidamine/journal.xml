<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>SELECT j.*
                    FROM cur_journal j
                    WHERE j.rekvId IN (SELECT rekv_id FROM get_asutuse_struktuur($1::integer))
                      AND coalesce(docs.usersRigths(j.id, 'select', $2::integer), TRUE)</sql>
    <alias>curJournal</alias>
  </grid>
  <select>
    <sql>SELECT d.id,
                         $2 :: INTEGER                                                                  AS userid,
                         d.docs_ids,
                         (to_char(created, 'DD.MM.YYYY HH:MM:SS')) :: TEXT                              AS created,
                         (to_char(lastupdate, 'DD.MM.YYYY HH:MM:SS')) :: TEXT                           AS lastupdate,
                         d.bpm,
                         trim(l.nimetus)                                                                AS doc,
                         trim(l.kood)                                                                   AS doc_type_id,
                         trim(s.nimetus)                                                                AS status,
                         d.status                                                                       AS doc_status,
                         jid.number                                                                     AS number,
                         j.rekvId,
                         j.kpv                                                                          AS kpv,
                         j.asutusid,
                         trim(j.dok) :: VARCHAR(120)                                                    AS dok,
                         j.selg,
                         j.muud,
                         j.objekt :: VARCHAR(254),
                         (SELECT sum(j1.summa) AS summa FROM docs.journal1 AS j1 WHERE parentid = j.id) AS summa,
                         asutus.regkood,
                         trim(asutus.nimetus)                                                           AS asutus,
                         u.ametnik                                                                      AS kasutaja,
                         (d.history-&gt;0-&gt;&gt;'user')::varchar(120)                                          AS koostaja
                  FROM docs.doc d
                         INNER JOIN libs.library l ON l.id = d.doc_type_id
                         INNER JOIN docs.journal j ON j.parentId = d.id
                         INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                         LEFT OUTER JOIN docs.journalid jid ON j.Id = jid.journalid
                         LEFT OUTER JOIN libs.library s ON s.library = 'STATUS' AND s.kood = d.status :: TEXT
                         LEFT OUTER JOIN libs.asutus AS asutus ON asutus.id = j.asutusId
                  WHERE d.id = $1</sql>
    <sqlAsNew>SELECT $1 :: INTEGER                                 AS id,
                              to_char(now(), 'DD.MM.YYYY HH:MM:SS') :: TEXT AS created,
                              to_char(now(), 'DD.MM.YYYY HH:MM:SS') :: TEXT AS lastupdate,
                              NULL :: TEXT []                               AS bpm,
                              'JOURNAL'                                     AS doc,
                              'JOURNAL'                                     AS doc_type_id,
                              ''                                            AS status,
                              0                                             AS doc_status,
                              0 :: INTEGER                               AS number,
                              0 :: INTEGER                               AS rekvId,
                              now() :: DATE                                 AS kpv,
                              0 :: INTEGER                               AS asutusid,
                              '' :: VARCHAR(120)                          AS dok,
                              '' :: TEXT                                  AS selg,
                              NULL :: TEXT                                  AS muud,
                              '' :: VARCHAR(254)                           AS objekt,
                              0 :: NUMERIC                                  AS summa,
                              '' :: VARCHAR(20)                           AS regkood,
                              '' :: VARCHAR(254)                          AS asutus,
                              '' :: VARCHAR(120)                          AS kasutaja,
                              '' :: VARCHAR(120)                          AS koostaja</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <select>
    <sql>SELECT j1.*, $2 :: INTEGER AS userid, 1 :: NUMERIC AS kuurs, 'EUR' :: VARCHAR(20) AS valuuta
                  FROM docs.journal1 AS j1
                         INNER JOIN docs.journal j ON j.id = j1.parentId
                         INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                  WHERE j.parentid = $1</sql>
    <query />
    <multiple>true</multiple>
    <alias>details</alias>
  </select>
  <select>
    <sql>select rd.id, $2::integer as userid, trim(l.kood) as doc_type, trim(l.nimetus) as name  from docs.doc d  left outer join docs.doc rd on rd.id in (select unnest(d.docs_ids))  left outer join libs.library l on rd.doc_type_id = l.id  inner join ou.userid u on u.id = $2::integer  where d.id = $1</sql>
    <query />
    <multiple>true</multiple>
    <alias>relations</alias>
  </select>
  <select>
    <sql>SELECT *
                  FROM libs.asutus
                  WHERE regkood = $1
                  ORDER BY staatus
                  LIMIT 1</sql>
    <query />
    <multiple>false</multiple>
    <alias>validate_asutus</alias>
  </select>
  <select>
    <sql>select docs.sp_kooperi_journal($1::integer, $2::integer) as result</sql>
    <query />
    <multiple>false</multiple>
    <alias>kooperi_journal</alias>
  </select>
  <selectAsLibs>
    <sql></sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select docs.sp_salvesta_journal($1::json, $2::integer, $3::integer) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>SELECT error_code, result, error_message
                FROM docs.sp_delete_journal($1::integer, $2::integer)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>kpv,selg,summa</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql>SELECT result, error_code, error_message, data
                  FROM sp_execute_task($1 :: INTEGER, $2 :: JSON, $3 :: TEXT)</sql>
    <alias>executeTask</alias>
  </executeCommand>
  <register>
    <sql>UPDATE docs.doc
                  SET status = 1
                  WHERE id = $1</sql>
    <alias>registrateDoc</alias>
  </register>
  <endProcess>
    <sql>UPDATE docs.doc SET status = 2 WHERE id = $1</sql>
    <alias>end</alias>
  </endProcess>
  <generateJournal>
    <sql />
    <alias />
  </generateJournal>
  <print></print>
</VFPData>
