<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>SELECT a.*,
                           $2::INTEGER AS userId
                    FROM hooldekodu.cur_hooettemaksud a
                    WHERE a.rekvid = $1</sql>
    <alias>curHooEttemaksud</alias>
  </grid>
  <select>
    <sql>SELECT h.id,
                     h.isikid,
                     h.kpv,
                     h.summa,
                     h.dokid,
                     h.doktyyp,
                     h.selg,
                     h.rekvid,
                     coalesce(h.muud, '')                                                         AS muud,
                     a.nimetus                                                                    AS isik,
                     CASE
                         WHEN h.doktyyp = 'LAUSEND'
                             THEN (SELECT number FROM cur_journal WHERE id = h.dokid LIMIT 1) END AS number,
                     $2::INTEGER                                                                  AS user_id
              FROM hooldekodu.hooettemaksud h
                       INNER JOIN libs.asutus a ON a.id = h.isikid
              WHERE h.id = $1</sql>
    <sqlAsNew>SELECT $1::INTEGER                                  AS id,
                          $2::INTEGER                                  AS userid,
                          NULL::INTEGER                                AS isikid,
                          current_date::DATE                           AS kpv,
                          0::NUMERIC(12, 2)                            AS summa,
                          NULL                                         AS dokid,
                          ''                                           AS doktyyp,
                          NULL::TEXT                                   AS selg,
                          (SELECT rekvid FROM ou.userid WHERE id = $2) AS rekvid,
                          ''                                           AS isik,
                          NULL::VARCHAR(20)                            AS number,
                          NULL::TEXT                                   AS muud</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <select>
    <sql>SELECT h.id,
                         h.kpv,
                         h.isikid,
                         h.ettemaksid,
                         h.journalid,
                         h.dokid,
                         h.doktyyp,
                         h.summa,
                         h.allikas,
                         h.tyyp,
                         h.jaak,
                         h.rekvid,
                         h.muud::VARCHAR(254) AS muud,
                         h.rekvid,
                         hl.osa,
                         'KINNI'::VARCHAR(20) AS status,
                         $2                   AS used_id
                  FROM hooldekodu.hootehingud h
                           INNER JOIN hooldekodu.hooleping hl ON h.isikid = hl.isikid AND hl.status &lt; 3
                  WHERE h.ettemaksid = $1
            </sql>
    <query />
    <multiple>true</multiple>
    <alias>details</alias>
  </select>
  <selectAsLibs>
    <sql></sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select hooldekodu.sp_salvesta_hooldaja($1::jsonb, $2::integer, $3::integer) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>SELECT error_code, result, error_message
                FROM hooldekodu.sp_delete_hooldaja($1::INTEGER, $2::INTEGER)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>hooldajaid,isikid</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql></sql>
    <alias></alias>
  </executeCommand>
  <register>
    <sql></sql>
    <alias></alias>
  </register>
  <endProcess>
    <sql />
    <alias />
  </endProcess>
  <generateJournal>
    <sql />
    <alias />
  </generateJournal>
  <print></print>
  <getLog>
    <sql>SELECT ROW_NUMBER() OVER ()              AS id,
                         (ajalugu -&gt;&gt; 'user')::VARCHAR(20) AS kasutaja,
                         coalesce(to_char((ajalugu -&gt;&gt; 'created')::TIMESTAMP, 'DD.MM.YYYY HH.MM.SS'),
                                  '')::VARCHAR(20)         AS koostatud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'updated')::TIMESTAMP, 'DD.MM.YYYY HH.MM.SS'),
                                  '')::VARCHAR(20)         AS muudatud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'print')::TIMESTAMP, 'DD.MM.YYYY HH.MM.SS'),
                                  '')::VARCHAR(20)         AS prinditud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'deleted')::TIMESTAMP, 'DD.MM.YYYY HH.MM.SS'),
                                  '')::VARCHAR(20)         AS kustutatud

                  FROM (
                           SELECT jsonb_array_elements('[]'::JSONB || d.ajalugu::JSONB) AS ajalugu, d.id
                           FROM libs.asutus d,
                                ou.userid u
                           WHERE d.id = $1
                             AND u.id = $2
                       ) qry
                  WHERE (ajalugu -&gt;&gt; 'user') IS NOT NULL</sql>
    <alias>getLogs</alias>
  </getLog>
</VFPData>
