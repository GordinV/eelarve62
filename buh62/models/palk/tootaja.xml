<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>SELECT a.*, $2::INTEGER AS userId
                    FROM palk.cur_tootajad a
                    WHERE rekvid = $1</sql>
    <alias>curTootajad</alias>
  </grid>
  <select>
    <sql>SELECT a.id,
                     a.regkood,
                     a.nimetus,
                     a.omvorm,
                     a.aadress,
                     a.kontakt,
                     a.aadress,
                     a.tel,
                     a.faks,
                     a.email,
                     a.muud,
                     a.tp,
                     a.staatus,
                     TRUE::BOOLEAN                                AS is_tootaja,
                     a.mark,
                     $2:: INTEGER                                 AS userid,
                     'TOOTAJA'                                    AS doc_type_id,
                     (properties -&gt;&gt; 'pank'):: TEXT               AS pank,
                     (properties -&gt;&gt; 'palk_email'):: VARCHAR(254) AS palk_email,
                     a.tp
              FROM libs.asutus a
              WHERE id = $1</sql>
    <sqlAsNew>SELECT
                  $1 :: INTEGER            AS id,
                  $2 :: INTEGER            AS userid,
                  'TOOTAJA'               AS doc_type_id,
                  '' :: VARCHAR(20)     AS regkood,
                  '' :: VARCHAR(254)    AS nimetus,
                  'ISIK' :: VARCHAR(20)   AS omvorm,
                  NULL :: TEXT            AS aadress,
                  NULL :: TEXT            AS kontakt,
                  NULL :: VARCHAR(254)    AS tel,
                  NULL :: VARCHAR(254)    AS faks,
                  NULL :: VARCHAR(254)    AS email,
                  NULL :: TEXT            AS muud,
                  '800699' :: VARCHAR(20) AS tp,
                  0 :: INTEGER            AS staatus,
                  NULL :: TEXT            AS pank,
                  NULL :: VARCHAR(254)    AS palk_email,
                  true::boolean           AS is_tootaja,
                  NULL :: TEXT            AS mark</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <select>
    <sql>SELECT (e.element -&gt;&gt; 'aa') :: VARCHAR(20)                                 AS aa,
                         $2 :: INTEGER                                                       AS userid,
                         coalesce((e.element -&gt;&gt; 'kas_palk') :: BOOLEAN, FALSE)::INTEGER     AS kas_palk,
                         coalesce((e.element -&gt;&gt; 'kas_raama') :: BOOLEAN, FALSE)::INTEGER    AS kas_raama,
                         coalesce((e.element -&gt;&gt; 'kas_oppetasu') :: BOOLEAN, FALSE)::INTEGER AS kas_oppetasu,
                         row_number() OVER ()                                                AS id,
                         libs.get_asutuse_aa(a.id, 'RAAMA'::TEXT)                            AS default_aa
                  FROM libs.asutus a,
                       json_array_elements(CASE
                                               WHEN (a.properties -&gt;&gt; 'asutus_aa') IS NULL THEN '[]'::JSON
                                               ELSE (a.properties -&gt; 'asutus_aa') :: JSON END) AS e (element)
                  WHERE a.id = $1
                    AND NOT empty((e.element -&gt;&gt; 'aa'))
            </sql>
    <query />
    <multiple>true</multiple>
    <alias>asutus_aa</alias>
  </select>
  <select>
    <sql>SELECT *
                  FROM palk.cur_toolepingud t
                  WHERE t.parentid = $1
                    AND rekvid IN (SELECT rekvid FROM ou.userid WHERE id = $2)</sql>
    <query />
    <multiple>true</multiple>
    <alias>tooleping</alias>
  </select>
  <select>
    <sql>SELECT liik_::VARCHAR(20),
                         tund_::VARCHAR(20),
                         maks_::VARCHAR(20),
                         id,
                         parentid,
                         lepingid,
                         libid,
                         summa,
                         CASE
                             WHEN NOT empty(percent_::INTEGER)
                                 THEN 'JAH'
                             ELSE 'EI' END :: VARCHAR(5) AS percent_,
                         CASE
                             WHEN empty(tulumaks::INTEGER)
                                 THEN 'JAH'
                             ELSE 'EI' END :: VARCHAR(5) AS tulumaks_,
                         tulumaks,
                         tulumaar,
                         status,
                         muud,
                         alimentid,
                         tunnus,
                         amet::VARCHAR(20),
                         osakond::VARCHAR(20),
                         osakondid,
                         tund,
                         liik,
                         maks,
                         asutusest,
                         round,
                         tululiik,
                         minsots,
                         rekvid,
                         kood::VARCHAR(20)               AS kood,
                         nimetus::VARCHAR(254)           AS nimetus,
                         pk.objekt::VARCHAR(20)
                  FROM palk.cur_palk_kaart pk
                  WHERE pk.parentid = $1 --asutus_id
                    AND pk.rekvid IN (SELECT rekvid
                                      FROM ou.userid u
                                      WHERE u.id = $2)</sql>
    <query />
    <multiple>true</multiple>
    <alias>palk_kaart</alias>
  </select>
  <select>
    <sql>SELECT *
                  FROM palk.get_taotlus_mvt_data($1::INTEGER, (SELECT rekvid FROM ou.userid WHERE id = $2)::INTEGER)</sql>
    <query />
    <multiple>true</multiple>
    <alias>taotlus_mvt</alias>
  </select>
  <select>
    <sql>SELECT sum(p.summa) AS summa,
                         p.isik,
                         p.amet
                  FROM palk.cur_used_mvt p
                  WHERE p.isikid = $1
                    AND month(alg_kpv) &lt;= $2
                    AND month(lopp_kpv) &gt;= $2
                    AND year(alg_kpv) = $3
                  GROUP BY isik, amet</sql>
    <query />
    <multiple>true</multiple>
    <alias>curUsed_mvt</alias>
  </select>
  <select>
    <sql>SELECT a.id
                  FROM libs.asutus a
                  WHERE RTRIM(LTRIM(a.regkood)) = RTRIM(LTRIM($1))
                    AND a.staatus &lt; 3
                  ORDER BY id DESC
                  LIMIT 1</sql>
    <query />
    <multiple>true</multiple>
    <alias>validate_asutus</alias>
  </select>
  <selectAsLibs>
    <sql>SELECT *
                   FROM palk.com_tootajad a
                   WHERE rekvid = $1</sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select libs.sp_salvesta_asutus($1::json, $2::integer, $3::integer) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>SELECT error_code, result, error_message
                FROM libs.sp_delete_asutus($1::INTEGER, $2::INTEGER)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>regkood,nimetus</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql></sql>
    <alias></alias>
  </executeCommand>
  <register>
    <sql></sql>
    <alias></alias>
  </register>
  <endProcess>
    <sql />
    <alias />
  </endProcess>
  <generateJournal>
    <sql />
    <alias />
  </generateJournal>
  <print></print>
  <getLog>
    <sql>SELECT ROW_NUMBER() OVER ()              AS id,
                         (ajalugu -&gt;&gt; 'user')::VARCHAR(20) AS kasutaja,
                         coalesce(to_char((ajalugu -&gt;&gt; 'created')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)         AS koostatud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'updated')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)         AS muudatud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'print')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)         AS prinditud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'deleted')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)         AS kustutatud

                  FROM (
                           SELECT jsonb_array_elements('[]'::JSONB || d.ajalugu::JSONB) AS ajalugu, d.id
                           FROM libs.asutus d,
                                ou.userid u
                           WHERE d.id = $1
                             AND u.id = $2
                       ) qry
                  WHERE (ajalugu -&gt;&gt; 'user') IS NOT NULL</sql>
    <alias>getLogs</alias>
  </getLog>
</VFPData>
