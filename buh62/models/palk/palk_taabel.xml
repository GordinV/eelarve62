<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>SELECT t.*, t.ametikood as ameti_kood,
                    $2::INTEGER AS userId
                    FROM palk.cur_palk_taabel t
                    WHERE (t.rekvid = $1 OR rekvid IS NULL)</sql>
    <alias>curTaabel1</alias>
  </grid>
  <select>
    <sql>SELECT $2 :: INTEGER                                                        AS userid,
                     'PALK_TAABEL'                                                        AS doc_type_id,
                     p.id,
                     p.lepingid,
                     p.kuu,
                     p.aasta,
                     p.kokku,
                     p.too,
                     p.paev,
                     p.ohtu,
                     p.oo,
                     p.tahtpaev,
                     p.puhapaev,
                     p.uleajatoo,
                     p.status,
                     p.muud,
                     coalesce((p.properties -&gt;&gt; 'tahtpaeva_tunnid')::NUMERIC, 0)::NUMERIC AS tahtpaeva_tunnid,
                     t.parentid
              FROM palk.palk_taabel1 p
                       INNER JOIN palk.tooleping t ON t.id = p.lepingid
              WHERE p.id = $1</sql>
    <sqlAsNew>SELECT
                      $1 :: INTEGER        AS id,
                      $2 :: INTEGER        AS userid,
                     'PALK_TAABEL' AS doc_type_id,
                      0 as id,
                      0::integer as lepingid,
                      month(current_date)::integer as kuu,
                      year(current_date)::integer as aasta,
                      0::numeric(12,4) as kokku,
                      0::numeric(12,4) as too,
                      0::numeric(12,4) as paev,
                      0::numeric(12,4) as ohtu,
                      0::numeric(12,4) as oo,
                      0::numeric(12,4) as tahtpaev,
                      0::numeric(12,4) as puhapaev,
                      0::numeric(12,4) as uleajatoo,
                      0::numeric(12,4) as tahtpaeva_tunnid,
                      1 as status,
                      0::integer          as parentid,
                      null::text as muud</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <select>
    <sql>SELECT *
                  FROM
                      jsonb_to_recordset((
                                             SELECT
                                                 p.data
                                             from
                                                 palk.sp_import_taabel_from_virosoft($2::integer,$3::integer, $1::JSONB) p
                                         )
                      )
                          AS x (error_message TEXT, error_code INTEGER, result INTEGER)</sql>
    <query />
    <multiple>false</multiple>
    <alias>importDok</alias>
    <not_initial_load>true</not_initial_load>
  </select>
  <selectAsLibs>
    <sql></sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select palk.sp_salvesta_palk_taabel($1::json, $2::integer, $3::integer) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>SELECT error_code, result, error_message
                FROM palk.sp_delete_palk_taabel($1::INTEGER, $2::INTEGER)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>lepingid,kuu,aasta</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql>SELECT *
                  FROM jsonb_to_recordset(
                               (
                                   SELECT qry.data
                                   FROM (
                                            SELECT *
                                            FROM palk.gen_taabel1($1::INTEGER, $2::JSON)
                                        ) qry
                               )
                           ) AS x (error_message TEXT, error_code INTEGER, result INTEGER)
        </sql>
    <alias>genTaabel</alias>
  </executeCommand>
  <register>
    <sql></sql>
    <alias></alias>
  </register>
  <endProcess>
    <sql />
    <alias />
  </endProcess>
  <generateJournal>
    <sql />
    <alias />
  </generateJournal>
  <print></print>
  <getLog>
    <sql>SELECT ROW_NUMBER() OVER ()                                                                        AS id,
                         (qry.ajalugu -&gt;&gt; 'user')::VARCHAR(20)                                                       AS kasutaja,
                         coalesce(to_char((ajalugu -&gt;&gt; 'created')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)                                                                   AS koostatud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'updated')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)                                                                   AS muudatud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'print')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)                                                                   AS prinditud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'email')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'), '')::VARCHAR(20) AS
                                                                                                                        email,
                         coalesce(to_char((ajalugu -&gt;&gt; 'earve')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)                                                                   AS earve,
                         coalesce(to_char((ajalugu -&gt;&gt; 'deleted')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)                                                                   AS kustutatud
                  FROM (
                           SELECT jsonb_array_elements('[]'::JSONB || d.ajalugu) AS ajalugu, d.id
                           FROM palk.palk_taabel1 d,
                                ou.userid u
                           WHERE d.id = $1
                             AND u.id = $2
                       ) qry
                  WHERE (qry.ajalugu -&gt;&gt; 'user') IS NOT NULL
        </sql>
    <alias>getLogs</alias>
  </getLog>
</VFPData>
