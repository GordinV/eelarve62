<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>SELECT a.*, $2::INTEGER AS userId
                    FROM palk.cur_palk_kaart a
                    WHERE (rekvid = $1 OR rekvid IS NULL)</sql>
    <alias>curPalkKaart</alias>
  </grid>
  <select>
    <sql>SELECT $2 :: INTEGER                                         AS userid,
                     'PALK_KAART'                                          AS doc_type_id,
                     pk.id,
                     pk.parentid,
                     pk.lepingid,
                     pk.libid,
                     pk.summa,
                     pk.percent_,
                     pk.tulumaks,
                     pk.tulumaar,
                     pk.status,
                     pk.muud,
                     pk.alimentid,
                     pk.tunnus::VARCHAR(20)                                AS tunnus,
                     pk.minsots,
                     osakond.kood                                          AS osakond,
                     osakond.id                                            AS osakondId,
                     amet.kood                                             AS amet,
                     l.kood,
                     l.nimetus,
                     (l.properties :: JSONB -&gt;&gt; 'liik') :: INTEGER         AS liik,
                     (l.properties :: JSONB -&gt;&gt; 'tund') :: INTEGER         AS tund,
                     (l.properties :: JSONB -&gt;&gt; 'maks') :: INTEGER         AS maks,
                     (l.properties :: JSONB -&gt;&gt; 'asutusest') :: INTEGER    AS asutusest,
                     (l.properties :: JSONB -&gt;&gt; 'tululiik') :: VARCHAR(20) AS tululiik,
                     'EUR' :: VARCHAR                                      AS valuuta,
                     1 :: NUMERIC                                          AS kuurs,
                     (pk.properties -&gt;&gt; 'objekt')::VARCHAR(20)               AS objekt
              FROM libs.library l
                       INNER JOIN palk.palk_kaart pk ON pk.libId = l.id
                       INNER JOIN palk.tooleping t ON pk.lepingId = t.id
                       INNER JOIN libs.library amet ON amet.id = t.ametid
                       INNER JOIN libs.library osakond ON osakond.id = t.osakondid
              WHERE pk.id = $1</sql>
    <sqlAsNew>SELECT
                      $1 :: INTEGER        AS id,
                      $2 :: INTEGER        AS userid,
                      'PALK_KAART'        AS doc_type_id,
                      0 :: INTEGER        AS parentid,
                      0 :: INTEGER        AS lepingid,
                      0 :: INTEGER        AS libid,
                      0 :: NUMERIC(14, 4) AS summa,
                      1 :: INTEGER        AS percent_,
                      0 :: INTEGER        AS tulumaks,
                      0 :: NUMERIC        AS tulumaar,
                      1 :: INTEGER        AS status,
                      NULL :: TEXT        AS muud,
                      0 :: INTEGER        AS alimentid,
                      NULL :: VARCHAR(20) AS tunnus,
                      0 :: INTEGER        AS minsots,
                      'EUR' :: VARCHAR    AS valuuta,
                      1 :: NUMERIC        AS kuurs,
                      null::varchar(20) as objekt</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <selectAsLibs>
    <sql>SELECT *
                   FROM palk.com_palk_kaart a
                   WHERE (rekvid = $1 OR rekvid IS NULL)</sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select palk.sp_salvesta_palk_kaart($1::json, $2::integer, $3::integer) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>SELECT error_code, result, error_message
                FROM palk.sp_delete_palk_kaart($1::INTEGER, $2::INTEGER)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>libid,lepingid</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql>SELECT error_code, result, error_message
                  FROM palk.change_kaart_status($1::INTEGER, $2::INTEGER)</sql>
    <alias>changeStatus</alias>
  </executeCommand>
  <register>
    <sql></sql>
    <alias></alias>
  </register>
  <endProcess>
    <sql />
    <alias />
  </endProcess>
  <generateJournal>
    <sql />
    <alias />
  </generateJournal>
  <print></print>
  <getLog>
    <sql>SELECT ROW_NUMBER() OVER ()                                                                        AS id,
                         (qry.ajalugu -&gt;&gt; 'user')::VARCHAR(20)                                                       AS kasutaja,
                         coalesce(to_char((ajalugu -&gt;&gt; 'created')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)                                                                   AS koostatud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'updated')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)                                                                   AS muudatud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'print')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)                                                                   AS prinditud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'email')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'), '')::VARCHAR(20) AS
                                                                                                                        email,
                         coalesce(to_char((ajalugu -&gt;&gt; 'earve')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)                                                                   AS earve,
                         coalesce(to_char((ajalugu -&gt;&gt; 'deleted')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)                                                                   AS kustutatud
                  FROM (
                           SELECT jsonb_array_elements('[]'::JSONB || d.ajalugu) AS ajalugu, d.id
                           FROM palk.palk_kaart d,
                                ou.userid u
                           WHERE d.id = $1
                             AND u.id = $2
                       ) qry
                  WHERE (qry.ajalugu -&gt;&gt; 'user') IS NOT NULL
        </sql>
    <alias>getLogs</alias>
  </getLog>
</VFPData>
