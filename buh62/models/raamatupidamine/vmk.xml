<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>SELECT
                          d.*,
                          0 AS valitud
                        FROM cur_mk d
                        WHERE d.rekvId = $1
                              AND coalesce(docs.usersRigths(d.id, 'select', $2::integer), TRUE)</sql>
    <alias>curMk</alias>
  </grid>
  <select>
    <sql>SELECT
                  d.id,
                  d.docs_ids,
                  (to_char(created, 'DD.MM.YYYY HH:MM:SS')) :: TEXT                                                   AS created,
                  (to_char(lastupdate, 'DD.MM.YYYY HH:MM:SS')) :: TEXT                                                AS lastupdate,
                  d.bpm,
                  trim(l.nimetus)                                                                                     AS doc,
                  trim(l.kood)                                                                                        AS doc_type_id,
                  trim(s.nimetus)                                                                                     AS status,
                  k.number                                                                                            AS number,
                  k.maksepaev                                                                                         AS maksepaev,
                  k.viitenr,
                  k.aaid                                                                                              AS aa_id,
                  aa.pank                                                                                             AS pank,
                  trim(aa.arve)::varchar(20)                                                                          AS omaArve,
                  k.rekvId,
                  k.kpv                                                                                               AS kpv,
                  k.selg,
                  k.muud,
                  k.opt,
                  k.arvid,
                  k.aaid,
                  ('Number:' || arv.number :: TEXT || ' Kuupäev:' || arv.kpv :: TEXT || ' Jääk:' || arv.jaak :: TEXT) AS arvnr,
                  (SELECT sum(summa)
                   FROM docs.mk1
                   WHERE parentid = k.id)                                                                             AS summa,
                   coalesce((dp.details :: JSONB -&gt;&gt; 'konto'),'') :: VARCHAR(20)                                      AS konto,
                   dp.selg::varchar(120)                                                                              as dokprop,
                   k.doklausid,
                  (d.history-&gt;0-&gt;&gt;'user')::varchar(120)                                          AS koostaja
                FROM docs.doc d
                  INNER JOIN docs.mk k ON k.parentId = d.id
                  INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                  LEFT OUTER JOIN libs.library l ON l.id = d.doc_type_id
                  LEFT OUTER JOIN libs.library s ON s.library = 'STATUS' AND s.kood = d.status :: TEXT
                  LEFT OUTER JOIN ou.aa AS aa ON k.aaid = aa.Id
                  LEFT OUTER JOIN docs.arv AS arv ON k.arvid = arv.Id
                  left outer join libs.dokprop dp on dp.id = k.doklausid 
                WHERE d.id = $1</sql>
    <sqlAsNew>SELECT
                      $1 :: INTEGER                                 AS id,
                      $2 :: INTEGER                                 AS userid,
                      to_char(now(), 'DD.MM.YYYY HH:MM:SS') :: TEXT AS created,
                      to_char(now(), 'DD.MM.YYYY HH:MM:SS') :: TEXT AS lastupdate,
                      NULL                                         AS bpm,
                      trim(l.nimetus)                               AS doc,
                      trim(l.kood)                                  AS doc_type_id,
                      trim(s.nimetus)                               AS status,
                      (coalesce((SELECT max(val(array_to_string(regexp_match(number, '\d+'),'')))
                       FROM docs.mk
                       WHERE opt = 0 
                       and rekvid in (
                       select rekvid from ou.userid where id = $2)
                       ),0) :: INTEGER + 1)::varchar(20)                          AS number,
                      now() :: DATE                                 AS maksepaev,
                      0                                         AS aaid,
                      1                                       AS pank,
                      trim('')::varchar(20)                    as omaarve,
                      NULL::integer                                 AS rekvId,
                      now() :: DATE                                 AS kpv,
                      NULL::varchar(120)                            AS viitenr,
                      NULL::TEXT                                    AS selg,
                      NULL::TEXT                                    AS muud,
                      0                                             AS opt,
                      NULL::varchar(20)                             AS regkood,
                      NULL::varchar(254)                            AS asutus,
                      NULL::integer                                 AS arvid,
                      NULL::varchar(20)                             AS arvnr,
                      0::numeric(12,2)                              AS summa,
                     null::varchar(120) as  dokprop,
                     null::varchar(20) as konto,
                     0 as doklausid
                    FROM libs.library l,
                      libs.library s,
                      (SELECT
                         id,
                         trim(nimetus) AS name
                       FROM ou.aa
                       WHERE pank = 1
                       ORDER BY default_
                       LIMIT 1) AS aa,
                      (SELECT *
                       FROM ou.userid u
                       WHERE u.id = $2 :: INTEGER) AS u
                    WHERE l.library = 'DOK' AND l.kood = 'VMK'
                          AND u.id = $2 :: INTEGER
                          AND s.library = 'STATUS' AND s.kood = '0'</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <select>
    <sql>SELECT
                      $2 :: INTEGER    AS userid,
                      trim(n.kood)::varchar(20)    AS kood,
                      trim(n.nimetus)::varchar(254) AS nimetus,
                      trim(a.nimetus)::varchar(254) AS asutus,
                      trim(a.aadress) as aadress,
                      k.parentid as parent_id,
                      k1.*,
                      'EUR'::varchar(20) as valuuta,
                      1::numeric(12,4) as kuurs,
                      coalesce(jid.number,0)::integer as lausnr
                    FROM docs.mk1 AS k1
                      INNER JOIN docs.mk k ON k.id = k1.parentId
                      INNER JOIN libs.nomenklatuur n ON n.id = k1.nomid
                      INNER JOIN libs.asutus a ON a.id = k1.asutusid
                      INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                      left outer join docs.doc d on k1.journalid = d.id
                      left outer join docs.journal j on j.parentid = d.id
                      left outer join docs.journalid jid on jid.journalid = j.id
                    WHERE k.parentid = $1</sql>
    <query />
    <multiple>true</multiple>
    <alias>details</alias>
  </select>
  <select>
    <sql>SELECT
                      rd.id,
                      $2 :: INTEGER   AS userid,
                      trim(l.kood)    AS doc_type,
                      trim(l.nimetus) AS name
                    FROM docs.doc d
                      LEFT OUTER JOIN docs.doc rd ON rd.id IN (SELECT unnest(d.docs_ids))
                      LEFT OUTER JOIN libs.library l ON rd.doc_type_id = l.id
                      INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                    WHERE d.id = $1</sql>
    <query />
    <multiple>true</multiple>
    <alias>relations</alias>
  </select>
  <selectAsLibs>
    <sql></sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select docs.sp_salvesta_mk($1::json, $2::integer, $3::integer) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>select error_code, result, error_message from docs.sp_delete_mk($1::integer, $2::integer)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>kpv</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql></sql>
    <alias></alias>
  </executeCommand>
  <register>
    <sql>update docs.doc set status = 1 where id = $1</sql>
    <alias />
  </register>
  <endProcess>
    <sql>update docs.doc set status = 2 where id = $1</sql>
    <alias />
  </endProcess>
  <generateJournal>
    <sql>select error_code, result, error_message from docs.gen_lausend_vmk($2::integer, $1::integer)</sql>
    <alias>generateJournal</alias>
  </generateJournal>
  <print></print>
</VFPData>
