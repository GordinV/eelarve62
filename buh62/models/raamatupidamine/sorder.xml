<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>SELECT *
                    FROM cur_korder k
                    WHERE k.rekvId = $1
                          AND coalesce(docs.usersRigths(k.id, 'select', $2::integer), TRUE)</sql>
    <alias>curKorder</alias>
  </grid>
  <select>
    <sql>SELECT
                  d.id,
                  d.docs_ids,
                  (to_char(created, 'DD.MM.YYYY HH:MM:SS')) :: TEXT                                                   AS created,
                  (to_char(lastupdate, 'DD.MM.YYYY HH:MM:SS')) :: TEXT                                                AS lastupdate,
                  d.bpm,
                  trim(l.nimetus)::varchar(254)                                                                       AS doc,
                  trim(l.kood)::varchar(20)                                                                           AS doc_type_id,
                  trim(s.nimetus)                                                                                     AS status,
                  k.number::varchar(20)                                                                               AS number,
                  k.summa,
                  k.kassaid                                                                                           AS kassa_id,
                  trim(aa.nimetus)                                                                                    AS kassa,
                  k.rekvId,
                  k.kpv                                                                        AS kpv,
                  k.asutusid,
                  trim(k.dokument)                                                                                    AS dokument,
                  k.alus,
                  k.muud,
                  k.nimi,
                  k.aadress,
                  k.tyyp,
                  asutus.regkood,
                  trim(asutus.nimetus)                                                                                AS asutus,
                  k.arvid,
                  ('Number:' || arv.number :: TEXT || ' Kuupäev:' || arv.kpv :: TEXT || ' Jääk:' || arv.jaak :: TEXT) AS arvnr,
                  k.doklausid,
                  k.journalid,
                  coalesce(jid.number,0)::integer as lausnr,
                   coalesce((dp.details :: JSONB -&gt;&gt; 'konto'),'') :: VARCHAR(20)                                      AS konto,
                   dp.selg::varchar(120)                                                                              as dokprop,
                  (SELECT sum(summa)
                   FROM docs.korder2 k2
                   WHERE parentid = k.id) :: NUMERIC(12, 2) AS kokku,
                  (d.history-&gt;0-&gt;&gt;'user')::varchar(120)                                                               AS koostaja

                FROM docs.doc d
                  INNER JOIN libs.library l ON l.id = d.doc_type_id
                  INNER JOIN docs.korder1 k ON k.parentId = d.id
                  INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                  LEFT OUTER JOIN libs.library s ON s.library = 'STATUS' AND s.kood = d.status :: TEXT
                  LEFT OUTER JOIN libs.asutus AS asutus ON asutus.id = k.asutusId
                  LEFT OUTER JOIN ou.aa AS aa ON k.kassaid = aa.Id
                  LEFT OUTER JOIN docs.arv AS arv ON k.arvid = arv.Id
                  left outer join docs.journal j on j.parentid = k.journalid                  
                  left outer join docs.journalid jid on jid.journalid = j.id                  
                  
                  left outer join libs.dokprop dp on dp.id = k.doklausid 
                WHERE d.id = $1</sql>
    <sqlAsNew>SELECT
                      $1 :: INTEGER                                   AS id,
                      $2 :: INTEGER                                   AS userid,
                      (now() :: DATE || 'T' || now() :: TIME) :: TEXT AS created,
                      (now() :: DATE || 'T' || now() :: TIME) :: TEXT AS lastupdate,
                      NULL                                            AS bpm,
                      trim(l.nimetus)                                 AS doc,
                      trim(l.kood)                                    AS doc_type_id,
                      trim(s.nimetus)                                 AS status,
                      docs.sp_get_number((select rekvid from ou.userid where id = $2)::integer, 'SORDER'::text, year(now()::date), null::integer)::varchar(20)  AS number,
                      0                                               AS summa,
                      aa.id                                           AS kassa_id,
                      trim(aa.name)                                   AS kassa,
                      NULL::integer                                   AS rekvId,
                      now()::date                                     AS kpv,
                      NULL::integer                                   AS asutusid,
                      NULL::varchar(120)                              AS dokument,
                      NULL::text                                      AS alus,
                      NULL::text                                      AS muud,
                      NULL::text                                      AS nimi,
                      NULL::text                                      AS aadress,
                      1                                               AS tyyp,
                      0::numeric(12,2)                                AS summa,
                      NULL::varchar(20)                               AS regkood,
                      NULL::varchar(254)                              AS asutus,
                      NULL::integer                                   AS arvid,
                      NULL::integer                                   AS arvnr,
                      NULL::integer                                   as doklausid,
                      0::integer                                      as journalid,
                      NULL::integer as lausnr,
                      null::varchar(120) as  dokprop,
                      null::varchar(20) as konto,
                      0::numeric as kokku
                    FROM libs.library l,
                      ou.userid u,
                      libs.library s,
                      (SELECT
                         id,
                         trim(nimetus) AS name
                       FROM ou.aa
                       WHERE kassa = 1
                       ORDER BY default_
                       LIMIT 1) AS aa
                    WHERE l.library = 'DOK' AND l.kood = 'SORDER'
                          AND u.id =$2 :: INTEGER
                          AND s.library = 'STATUS' AND s.kood = '0'</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <select>
    <sql>SELECT
                  k1.id,
                  $2 :: INTEGER   AS userid,
                  trim(n.kood)::varchar(20)    AS kood,
                  trim(n.nimetus)::varchar(20) AS nimetus,
                  trim(n.uhik)    AS uhik,
                  k1.*,
                  'EUR' as valuuta,
                  1::numeric(12,4) as kuurs
                FROM docs.korder2 AS k1
                  INNER JOIN docs.korder1 k ON k.id = k1.parentId
                  INNER JOIN libs.nomenklatuur n ON n.id = k1.nomid
                  INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                  WHERE k.parentid = $1</sql>
    <query />
    <multiple>true</multiple>
    <alias>details</alias>
  </select>
  <select>
    <sql>SELECT
                  rd.id,
                  $2 :: INTEGER   AS userid,
                  trim(l.kood)    AS doc_type,
                  trim(l.nimetus) AS name
                FROM docs.doc d
                  LEFT OUTER JOIN docs.doc rd ON rd.id IN (SELECT unnest(d.docs_ids))
                  LEFT OUTER JOIN libs.library l ON rd.doc_type_id = l.id
                  INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                WHERE d.id = $1</sql>
    <query />
    <multiple>true</multiple>
    <alias>relations</alias>
  </select>
  <selectAsLibs>
    <sql></sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select docs.sp_salvesta_korder($1::json, $2::integer, $3::integer) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>select error_code, result, error_message from docs.sp_delete_korder($1::integer, $2::integer)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>kpv,asutusid,summa</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql></sql>
    <alias></alias>
  </executeCommand>
  <register>
    <sql>update docs.doc set status = 1 where id = $1</sql>
    <alias />
  </register>
  <endProcess>
    <sql>update docs.doc set status = 2 where id = $1</sql>
    <alias />
  </endProcess>
  <generateJournal>
    <sql>select error_code, result, error_message from docs.gen_lausend_sorder($2::INTEGER, $1::INTEGER)</sql>
    <alias>generateJournal</alias>
  </generateJournal>
  <print></print>
  <getLog>
    <sql>SELECT ROW_NUMBER() OVER ()                                                                        AS id,
                         (ajalugu -&gt;&gt; 'user')::VARCHAR(20)                                                           AS kasutaja,
                         coalesce(to_char((ajalugu -&gt;&gt; 'created')::TIMESTAMP, 'DD.MM.YYYY HH.MM.SS'),
                                  '')::VARCHAR(20)                                                                   AS koostatud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'updated')::TIMESTAMP, 'DD.MM.YYYY HH.MM.SS'),
                                  '')::VARCHAR(20)                                                                   AS muudatud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'print')::TIMESTAMP, 'DD.MM.YYYY HH.MM.SS'),
                                  '')::VARCHAR(20)                                                                   AS prinditud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'email')::TIMESTAMP, 'DD.MM.YYYY HH.MM.SS'), '')::VARCHAR(20) AS
                                                                                                                        email,
                         coalesce(to_char((ajalugu -&gt;&gt; 'earve')::TIMESTAMP, 'DD.MM.YYYY HH.MM.SS'),
                                  '')::VARCHAR(20)                                                                   AS earve,
                         coalesce(to_char((ajalugu -&gt;&gt; 'deleted')::TIMESTAMP, 'DD.MM.YYYY HH.MM.SS'),
                                  '')::VARCHAR(20)                                                                   AS kustutatud
                  FROM (
                           SELECT jsonb_array_elements( history) AS ajalugu, d.id, d.rekvid
                           FROM docs.doc d,
                                ou.userid u
                           WHERE d.id = $1
                             AND u.id = $2
                       ) qry</sql>
    <alias>getLogs</alias>
  </getLog>
</VFPData>
