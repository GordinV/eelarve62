<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>SELECT *
                    FROM cur_korder k
                        WHERE k.rekvId = $1
                             AND coalesce(docs.usersRigths(k.id, 'select', $2::INTEGER), TRUE)</sql>
    <alias>curKorder</alias>
  </grid>
  <select>
    <sql>SELECT d.id,
                         d.docs_ids,
                         (to_char(created, 'DD.MM.YYYY HH:MM:SS')) :: TEXT              AS created,
                         (to_char(lastupdate, 'DD.MM.YYYY HH:MM:SS')) :: TEXT           AS lastupdate,
                         d.bpm,
                         trim(l.nimetus)                                                AS doc,
                         trim(l.kood)                                                   AS doc_type_id,
                         trim(s.nimetus)                                                AS status,
                         k.number::VARCHAR(20)                                          AS number,
                         k.summa,
                         k.kassaid                                                      AS kassa_id,
                         trim(aa.nimetus)                                               AS kassa,
                         k.rekvId,
                         k.kpv                                                          AS kpv,
                         k.asutusid,
                         trim(coalesce(k.dokument,''))                                               AS dokument,
                         k.alus,
                         k.muud,
                         k.nimi,
                         coalesce(k.aadress, '')                                        AS aadress,
                         k.tyyp,
                         asutus.regkood,
                         trim(asutus.nimetus)                                           AS asutus,
                         k.arvid,
                         ('Number:' || arv.number :: TEXT || ' Kuupäev:' || arv.kpv :: TEXT || ' Jääk:' ||
                          arv.jaak :: TEXT)                                             AS arvnr,
                         k.doklausid,
                         k.journalid,
                         coalesce(jid.number, 0)::INTEGER                               AS lausnr,
                         coalesce((dp.details :: JSONB -&gt;&gt; 'konto'), '') :: VARCHAR(20) AS konto,
                         dp.selg::VARCHAR(120)                                          AS dokprop,
                         (SELECT sum(summa)
                          FROM docs.korder2 k2
                              WHERE parentid = k.id) :: NUMERIC(12, 2)                  AS kokku,
                         (d.history -&gt; 0 -&gt;&gt; 'user')::VARCHAR(120)                      AS koostaja

                  FROM docs.doc d
                           INNER JOIN libs.library l ON l.id = d.doc_type_id
                           INNER JOIN docs.korder1 k ON k.parentId = d.id
                           INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                           LEFT OUTER JOIN libs.library s ON s.library = 'STATUS' AND s.kood = d.status :: TEXT
                           LEFT OUTER JOIN libs.asutus AS asutus ON asutus.id = k.asutusId
                           LEFT OUTER JOIN ou.aa AS aa ON k.kassaid = aa.Id
                           LEFT OUTER JOIN docs.arv AS arv ON k.arvid = arv.Id
                           LEFT OUTER JOIN docs.journal j ON j.parentid = k.journalid
                           LEFT OUTER JOIN docs.journalid jid ON jid.journalid = j.id
                           LEFT OUTER JOIN libs.dokprop dp ON dp.id = k.doklausid
                      WHERE d.id = $1</sql>
    <sqlAsNew>SELECT $1 :: INTEGER                                                     AS id,
                              $2 :: INTEGER                                                     AS userid,
                              (now() :: DATE || 'T' || now() :: TIME) :: TEXT                   AS created,
                              (now() :: DATE || 'T' || now() :: TIME) :: TEXT                   AS lastupdate,
                              NULL                                                              AS bpm,
                              trim(l.nimetus)                                                   AS doc,
                              trim(l.kood)                                                      AS doc_type_id,
                              trim(s.nimetus)                                                   AS status,
                              docs.sp_get_number((SELECT rekvid
                                                  FROM ou.userid WHERE id = $2)::INTEGER, 'VORDER'::TEXT,
                                                 year(now()::DATE), NULL::INTEGER)::VARCHAR(20) AS number,
                              0                                                                 AS summa,
                              aa.id                                                             AS kassa_id,
                              trim(aa.name)                                                     AS kassa,
                              NULL::INTEGER                                                     AS rekvId,
                              now()::DATE                                                       AS kpv,
                              NULL::INTEGER                                                     AS asutusid,
                              NULL::VARCHAR(120)                                                AS dokument,
                              NULL::TEXT                                                        AS alus,
                              NULL::TEXT                                                        AS muud,
                              NULL::TEXT                                                        AS nimi,
                              NULL::TEXT                                                        AS aadress,
                              2                                                                 AS tyyp,
                              0::NUMERIC(12, 2)                                                 AS summa,
                              NULL::VARCHAR(20)                                                 AS regkood,
                              NULL::VARCHAR(254)                                                AS asutus,
                              NULL::INTEGER                                                     AS arvid,
                              NULL::INTEGER                                                     AS arvnr,
                              NULL::INTEGER                                                     AS doklausid,
                              0::INTEGER                                                        AS journalid,
                              NULL::INTEGER                                                     AS lausnr,
                              NULL::VARCHAR(120)                                                AS dokprop,
                              NULL::VARCHAR(20)                                                 AS konto,
                              0::NUMERIC                                                        AS kokku
                       FROM libs.library l,
                            ou.userid u,
                            libs.library s,
                            (SELECT id,
                                    trim(nimetus) AS name
                             FROM ou.aa
                                 WHERE kassa = 1
                                 ORDER BY default_
                                 LIMIT 1) AS aa
                           WHERE
                            l.library = 'DOK' AND l.kood = 'VORDER'
                                AND u.id = $2 :: INTEGER
                                AND s.library = 'STATUS' AND s.kood = '0'</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <select>
    <sql>SELECT k1.id,
                         $2 :: INTEGER                 AS userid,
                         trim(n.kood)::VARCHAR(20)     AS kood,
                         trim(n.nimetus)::VARCHAR(254) AS nimetus,
                         trim(n.uhik)                  AS uhik,
                         k1.*,
                         'EUR'::VARCHAR(20)            AS valuuta,
                         1::NUMERIC(12, 4)             AS kuurs
                  FROM docs.korder2 AS k1
                           INNER JOIN docs.korder1 k ON k.id = k1.parentId
                           INNER JOIN libs.nomenklatuur n ON n.id = k1.nomid
                           INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                      WHERE k.parentid = $1</sql>
    <query />
    <multiple>true</multiple>
    <alias>details</alias>
  </select>
  <select>
    <sql>SELECT d.*
                  FROM docs.get_relative_docs($1::INTEGER) d
                           INNER JOIN ou.userid u ON u.id = $2 :: INTEGER</sql>
    <query />
    <multiple>true</multiple>
    <alias>relations</alias>
  </select>
  <selectAsLibs>
    <sql></sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select docs.sp_salvesta_korder($1::json, $2::integer, $3::integer) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>SELECT error_code, result, error_message
                FROM docs.sp_delete_korder($1::INTEGER, $2::INTEGER)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>kpv,asutusid,summa</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql></sql>
    <alias></alias>
  </executeCommand>
  <register>
    <sql>UPDATE docs.doc
                  SET status = 1
                  WHERE id = $1</sql>
    <alias />
  </register>
  <endProcess>
    <sql>UPDATE docs.doc
                  SET status = 2
                  WHERE id = $1</sql>
    <alias />
  </endProcess>
  <generateJournal>
    <sql>SELECT error_code, result, error_message
                  FROM docs.gen_lausend_vorder($2::INTEGER, $1::INTEGER)</sql>
    <alias>generateJournal</alias>
  </generateJournal>
  <print></print>
  <getLog>
    <sql>SELECT ROW_NUMBER() OVER ()                                                                        AS id,
                         (ajalugu -&gt;&gt; 'user')::VARCHAR(20)                                                           AS kasutaja,
                         coalesce(to_char((ajalugu -&gt;&gt; 'created')::TIMESTAMP, 'DD.MM.YYYY HH.MM.SS'),
                                  '')::VARCHAR(20)                                                                   AS koostatud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'updated')::TIMESTAMP, 'DD.MM.YYYY HH.MM.SS'),
                                  '')::VARCHAR(20)                                                                   AS muudatud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'print')::TIMESTAMP, 'DD.MM.YYYY HH.MM.SS'),
                                  '')::VARCHAR(20)                                                                   AS prinditud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'email')::TIMESTAMP, 'DD.MM.YYYY HH.MM.SS'), '')::VARCHAR(20) AS
                                                                                                                        email,
                         coalesce(to_char((ajalugu -&gt;&gt; 'earve')::TIMESTAMP, 'DD.MM.YYYY HH.MM.SS'),
                                  '')::VARCHAR(20)                                                                   AS earve,
                         coalesce(to_char((ajalugu -&gt;&gt; 'deleted')::TIMESTAMP, 'DD.MM.YYYY HH.MM.SS'),
                                  '')::VARCHAR(20)                                                                   AS kustutatud
                  FROM (
                           SELECT jsonb_array_elements(history) AS ajalugu, d.id, d.rekvid
                           FROM docs.doc d,
                                ou.userid u
                               WHERE
                                d.id = $1
                                    AND u.id = $2
                       ) qry</sql>
    <alias>getLogs</alias>
  </getLog>
</VFPData>
