<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>SELECT a.*,
                           l.kood as ameti_kood,
                           l.muud
                    FROM cur_ametid a
                             inner join libs.library l on l.id = a.id
                    WHERE (a.rekvId = $1 OR a.rekvid IS NULL)</sql>
    <alias>curAmetid</alias>
  </grid>
  <select>
    <sql>SELECT
                  l.id,
                  l.rekvid,
                  l.kood::VARCHAR(20)                                      AS kood,
                  l.nimetus::VARCHAR(254)                                  AS nimetus,
                  l.muud,
                  l.status,
                  l.library::VARCHAR(20)                                   AS library,
                  $2::INTEGER                                              AS userid,
                  'AMET'                                                   AS doc_type_id,
                  (l.properties:: JSONB -&gt;&gt; 'osakondid') :: INTEGER        AS osakondId,
                  (l.properties:: JSONB -&gt;&gt; 'kogus') :: NUMERIC(18, 2)     AS kogus,
                  (l.properties:: JSONB -&gt;&gt; 'ameti_klassif') ::varchar(20) AS ameti_klassif,
                  (l.properties:: JSONB -&gt;&gt; 'palgamaar') ::INTEGER         AS palgamaar,
                  (l.properties:: JSONB -&gt;&gt; 'tunnusid') ::INTEGER          AS tunnusId,
                  (l.properties::JSONB -&gt;&gt; 'valid')::DATE                  AS valid
              FROM
                  libs.library l
              WHERE
                  l.id = $1</sql>
    <sqlAsNew>select  $1::integer as id , 
            $2::integer as userid, 
            'AMET' as doc_type_id,
            null::varchar(20) as  kood,
            0::integer as rekvid,
            null::varchar(254) as nimetus,
            'AMET'::varchar(20) as library,
            0::integer as status,
            null::integer as osakondId,
            null::numeric(18,2) as kogus,
            null::varchar(20) as ameti_klassif,
            null::integer as palgamaar,
            null::integer as tunnusId,
            null::date as valid,
            null::text as muud</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <select>
    <sql>SELECT tmpl.id,
                         tmpl.parentid,
                         tmpl.libid,
                         tmpl.summa,
                         tmpl.percent_,
                         tmpl.tulumaks,
                         tmpl.tulumaar,
                         tmpl.tunnus,
                         tmpl.amet,
                         tmpl.kood :: VARCHAR(20),
                         tmpl.nimetus :: VARCHAR(254),
                         tmpl.liik,
                         tmpl.tund,
                         tmpl.maks,
                         tmpl.asutusest,
                         tmpl.tululiik,
                         tmpl.liik_ :: VARCHAR(20),
                         tmpl.tund_ :: VARCHAR(20),
                         tmpl.maks_ :: VARCHAR(20),
                         $2::INTEGER AS userid
                  FROM palk.cur_palk_tmpl tmpl
                  WHERE parentid = $1</sql>
    <query />
    <multiple>true</multiple>
    <alias>details</alias>
  </select>
  <select>
    <sql>SELECT *
                  FROM jsonb_to_recordset(
                               fnc_check_libs($2::JSON, $3::date, $1::INTEGER))
                           AS x (error_message TEXT)
                  WHERE error_message IS NOT NULL
            </sql>
    <query />
    <multiple>true</multiple>
    <alias>validate_libs</alias>
  </select>
  <select>
    <sql>SELECT *
                  FROM jsonb_to_recordset(
                               get_amet_kasutus($2::INTEGER, $3::DATE,
                                                $1::INTEGER)
                           ) AS x (error_message TEXT, error_code INTEGER)
                  WHERE error_message IS NOT NULL
            </sql>
    <query />
    <multiple>true</multiple>
    <alias>validate_lib_usage</alias>
  </select>
  <select>
    <sql>select *
               from
                   (
                       SELECT
                           (jsonb_array_elements(properties::jsonb -&gt; 'palgaastmed') -&gt;&gt; 'summa')::numeric(12, 2) AS summa,
                           (jsonb_array_elements(properties::jsonb -&gt; 'palgaastmed') -&gt;&gt;
                            'palgamaar')::integer                                                                 AS palgamaar
                       FROM
                           libs.library l
                       WHERE
                           l.id = $1
                   ) qry
               order by
                   palgamaar </sql>
    <query />
    <multiple>true</multiple>
    <alias>comPalgamaar</alias>
  </select>
  <selectAsLibs>
    <sql>SELECT *
                   FROM com_ametid l
                   WHERE l.rekvId = $1</sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select libs.sp_salvesta_amet($1, $2, $3) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>SELECT error_code, result, error_message
                FROM libs.sp_delete_library($1::INTEGER, $2::INTEGER)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>kood,nimetus,osakondid</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql></sql>
    <alias></alias>
  </executeCommand>
  <register>
    <sql></sql>
    <alias></alias>
  </register>
  <endProcess>
    <sql />
    <alias />
  </endProcess>
  <generateJournal>
    <sql />
    <alias />
  </generateJournal>
  <print></print>
  <getLog>
    <sql>SELECT ROW_NUMBER() OVER ()              AS id,
                         (ajalugu -&gt;&gt; 'user')::VARCHAR(20) AS kasutaja,
                         coalesce(to_char((ajalugu -&gt;&gt; 'created')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)         AS koostatud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'updated')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)         AS muudatud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'print')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)         AS prinditud,
                         coalesce(to_char((ajalugu -&gt;&gt; 'deleted')::TIMESTAMP, 'DD.MM.YYYY HH.MI.SS'),
                                  '')::VARCHAR(20)         AS kustutatud

                  FROM (SELECT $2                                                      AS user_id,
                               jsonb_array_elements(jsonb_agg(jsonb_build_object('updated', propertis -&gt;&gt; 'updated', 'user',
                                                            ltrim(rtrim(u.kasutaja))))) AS ajalugu
                        FROM ou.logs l
                                 LEFT OUTER JOIN ou.userid u ON u.id = l.user_id
                        WHERE propertis -&gt;&gt; 'table' = 'library'
                          AND doc_id = $1) qry
        </sql>
    <alias>getLogs</alias>
  </getLog>
</VFPData>
