<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>SELECT id,
                           coalesce(kood, '')::VARCHAR(20)     AS kood,
                           coalesce(nimetus, '')::VARCHAR(254) AS nimetus,
                           $2::INTEGER                         AS userId,
                           n.dok,
                           (n.properties -&gt;&gt; 'konto')::TEXT    AS konto,
                           (n.properties -&gt;&gt; 'tunnus')::TEXT   AS tunnus,
                           n.hind,
                           (n.properties -&gt;&gt; 'valid')::DATE    AS valid
                    FROM libs.nomenklatuur n
                    WHERE (n.rekvId = $1 OR n.rekvid IS NULL)
                      AND n.status &lt;&gt; 3</sql>
    <alias>curNomenklatuur</alias>
  </grid>
  <select>
    <sql>SELECT n.kood,
                     n.id,
                     n.nimetus,
                     n.dok::VARCHAR(20),
                     n.muud,
                     n.rekvid,
                     $2::INTEGER                                                    AS userid,
                     'NOMENCLATURE'                                                 AS doc_type_id,
                     'EUR'                                                          AS valuuta,
                     1                                                              AS kuurs,
                     n.uhik                                                         AS uhik,
                     n.hind                                                         AS hind,
                     (n.properties::JSONB -&gt;&gt; 'vat')::VARCHAR(20)                   AS vat,
                     (n.properties::JSONB -&gt;&gt; 'konto')::VARCHAR(20)                 AS konto,
                     (n.properties::JSONB -&gt;&gt; 'projekt')::VARCHAR(20)               AS projekt,
                     (n.properties::JSONB -&gt;&gt; 'tunnus')::VARCHAR(20)                AS tunnus,
                     (n.properties::JSONB -&gt;&gt; 'tegev')::VARCHAR(20)                 AS tegev,
                     (n.properties::JSONB -&gt;&gt; 'allikas')::VARCHAR(20)               AS allikas,
                     (n.properties::JSONB -&gt;&gt; 'rahavoog')::VARCHAR(20)              AS rahavoog,
                     (n.properties::JSONB -&gt;&gt; 'artikkel')::VARCHAR(20)              AS artikkel,
                     coalesce((n.properties::JSONB -&gt;&gt; 'kas_inf3')::BOOLEAN, FALSE) AS kas_inf3,
                     (n.properties::JSONB -&gt;&gt; 'valid')::DATE                        AS valid
              FROM libs.nomenklatuur n
              WHERE n.id = $1</sql>
    <sqlAsNew>select  $1::integer as id , $2::integer as userid, 'NOMENCLATURE' as doc_type_id,
            ''::varchar(20) as  kood,
            0::integer as rekvid,
            ''::varchar(254) as nimetus,
            ''::varchar(20) as dok,
            ''::varchar(20) as uhik,
            0::numeric as hind,
            0::numeric as ulehind,
            1::numeric as kogus,
            null::text as formula,
            0::integer as status,
            null::text as muud,
            null::text as properties,
            'EUR' as valuuta, 1 as kuurs,
            '20'::varchar(20) as vat,
            false as kas_inf3,
            null::varchar(20) as konto,
            null::varchar(20) as projekt,
            null::varchar(20) as tunnus,
            null::varchar(20) as tegev,
            null::varchar(20) as allikas,
            null::varchar(20) as rahavoog,
            null::varchar(20) as artikkel,
            null::date as valid</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <select>
    <sql>SELECT *
                  FROM jsonb_to_recordset(
                               fnc_check_libs($2::JSON, $3::date, $1::INTEGER))
                           AS x (error_message TEXT)
                  WHERE error_message IS NOT NULL
            </sql>
    <query />
    <multiple>true</multiple>
    <alias>validate_libs</alias>
  </select>
  <select>
    <sql>SELECT *
                  FROM jsonb_to_recordset(
                               get_nom_kasutus($2::INTEGER, $3::date,
                                               $1::INTEGER)
                           ) AS x (error_message TEXT, error_code INTEGER)
                  WHERE error_message IS NOT NULL
            </sql>
    <query />
    <multiple>true</multiple>
    <alias>validate_lib_usage</alias>
  </select>
  <selectAsLibs>
    <sql>SELECT *
                   FROM com_nomenclature
                   WHERE (rekvid = $1 OR rekvid IS NULL)
                       ORDER BY kood</sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select libs.sp_salvesta_nomenclature($1, $2, $3) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>SELECT error_code, result, error_message
                FROM libs.sp_delete_nomenclature($1::INTEGER, $2::INTEGER)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>kood,nimetus,dok</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql></sql>
    <alias></alias>
  </executeCommand>
  <register>
    <sql></sql>
    <alias></alias>
  </register>
  <endProcess>
    <sql />
    <alias />
  </endProcess>
  <generateJournal>
    <sql />
    <alias />
  </generateJournal>
  <print>
    <view>noms_register</view>
    <params>id</params>
  </print>
  <print>
    <view>noms_register</view>
    <params>sqlWhere</params>
  </print>
</VFPData>
