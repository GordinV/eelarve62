<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>SELECT d.*
                    FROM cur_toiming d
                    WHERE d.rekvId = $1
                      AND coalesce(docs.usersRigths(d.id, 'select', $2), TRUE)</sql>
    <alias>curReklDekl</alias>
  </grid>
  <select>
    <sql>SELECT d.id,
                         d.docs_ids,
                         (to_char(d.created, 'DD.MM.YYYY HH:MM:SS')) :: TEXT            AS created,
                         (to_char(d.lastupdate, 'DD.MM.YYYY HH:MM:SS')) :: TEXT         AS lastupdate,
                         d.bpm,
                         trim(dt.nimetus)                                               AS doc,
                         trim(dt.kood)                                                  AS doc_type_id,
                         trim(s.nimetus)                                                AS status,
                         t.number                                                       AS number,
                         d.rekvid,
                         t.asutusid,
                         t.lubaid,
                         t.muud                                                         AS muud,
                         t.kpv,
                         t.summa,
                         t.tyyp,
                         t.deklid,
                         t.staatus,
                         t.saadetud,
                         t.dokpropid,
                         t.journalid,
                         t.lubaid,
                         t.tahtaeg,
                         t.alus :: VARCHAR(254),
                         t.ettekirjutus,
                         coalesce((dp.details :: JSONB -&gt;&gt; 'konto'), '') :: VARCHAR(20) AS konto,
                         dp.selg :: VARCHAR(120)                                        AS dokprop,
                         coalesce(jid.number, 0) :: INTEGER                             AS lausend,
                         rekl.fnc_dekl_jaak(d.ID)                                       AS jaak,
                         t.lisa-&gt;&gt;'dekltasud' :: TEXT                                   AS tasud,
                         t.lisa-&gt;&gt;'failid' :: TEXT                                      AS failid,
                         ((lisa-&gt;&gt;'failid') :: JSONB)-&gt;&gt;'fail'                          AS fail,
                         ((lisa-&gt;&gt;'failid') :: JSONB)-&gt;&gt;'tyyp'                          AS storage_tyyp

                  FROM docs.doc d
                         INNER JOIN rekl.toiming t ON t.parentId = d.id
                         INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                         INNER JOIN libs.asutus a ON a.id = t.asutusid
                         LEFT OUTER JOIN libs.dokprop dp ON dp.id = t.dokpropid
                         LEFT OUTER JOIN libs.library dt ON t.id = d.doc_type_id
                         LEFT OUTER JOIN libs.library s ON s.library = 'STATUS' AND s.kood = d.status :: TEXT
                         LEFT OUTER JOIN docs.doc dj ON t.journalid = dj.id
                         LEFT OUTER JOIN docs.journal j ON j.parentid = dj.id
                         LEFT OUTER JOIN docs.journalid jid ON jid.journalid = j.id
                  WHERE d.id = $1</sql>
    <sqlAsNew>SELECT $1 :: INTEGER                                 AS id,
                              $2 :: INTEGER                                 AS userid,
                              to_char(now(), 'DD.MM.YYYY HH:MM:SS') :: TEXT AS created,
                              to_char(now(), 'DD.MM.YYYY HH:MM:SS') :: TEXT AS lastupdate,
                              NULL                                          AS bpm,
                              trim(t.nimetus)                               AS doc,
                              trim(t.kood)                                  AS doc_type_id,
                              trim(s.nimetus)                               AS status,
                              0 :: INTEGER                                  AS number,
                              NULL :: INTEGER                               AS rekvId,
                              NULL :: INTEGER                               AS asutusid,
                              NULL :: INTEGER                               AS lubaid,
                              NULL :: TEXT                                  AS muud,
                              now() :: DATE                                 AS kpv,
                              0 :: NUMERIC                                  AS summa,
                              'DEKL' :: REKL_TOIMING_LIIK                   AS TYYP,
                              NULL :: INTEGER                               AS deklid,
                              NULL :: DOK_STATUS                            AS staatus,
                              NULL :: DATE                                  AS saadetud,
                              NULL :: INTEGER                               AS dokpropid,
                              NULL :: DATE                                  AS tahtaeg,
                              NULL :: VARCHAR(254)                          AS alus,
                              NULL :: TEXT                                  AS ettekirjutus,
                              NULL :: VARCHAR(120)                          AS dokprop,
                              NULL :: VARCHAR(20)                           AS konto,
                              NULL :: INTEGER                               AS lausend,
                              0 :: NUMERIC                                  AS jaak,
                              NULL :: TEXT                                  AS tasud,
                              NULL :: TEXT                                  AS failid,
                              NULL :: TEXT                                  AS fail,
                              NULL :: TEXT                                  AS storage_type
                       FROM libs.library t,
                            libs.library s,
                            (SELECT * FROM ou.userid u WHERE u.id = $2 :: INTEGER) AS u
                       WHERE t.library = 'DOK'
                         AND t.kood = 'DEKL'
                         AND u.id = $2 :: INTEGER
                         AND s.library = 'STATUS'
                         AND s.kood = '0'</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <select>
    <sql>SELECT rd.id, $2 :: INTEGER AS userid, trim(l.kood) AS doc_type, trim(l.nimetus) AS name
                  FROM docs.doc d
                         LEFT OUTER JOIN docs.doc rd ON rd.id IN (SELECT unnest(d.docs_ids))
                         LEFT OUTER JOIN libs.library l ON rd.doc_type_id = l.id
                         INNER JOIN ou.userid u ON u.id = $2 :: INTEGER
                  WHERE d.id = $1</sql>
    <query />
    <multiple>true</multiple>
    <alias>relations</alias>
  </select>
  <select>
    <sql>SELECT t.summa, t.kpv AS kpv
                  FROM docs.doc d
                         INNER JOIN rekl.toiming t ON d.id = t.parentid
                  WHERE t.tyyp = 'TASU'
                    AND d.docs_ids @&gt; ARRAY[$1] :: INTEGER []
                  ORDER BY d.id DESC</sql>
    <query />
    <multiple>true</multiple>
    <alias>tasud</alias>
  </select>
  <selectAsLibs>
    <sql></sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select rekl.sp_salvesta_toiming($1, $2, $3) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>SELECT error_code, result, error_message
                FROM rekl.sp_delete_toiming($1, $2)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>algkpv,loppkpv,asutusid</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql>SELECT *
                  FROM sp_execute_task($1 :: INTEGER, $2 :: JSON, $3 :: TEXT)</sql>
    <alias>executeTask</alias>
  </executeCommand>
  <register>
    <sql>UPDATE docs.doc
                  SET status = 1
                  WHERE id = $1</sql>
    <alias />
  </register>
  <endProcess>
    <sql>UPDATE docs.doc
                  SET status = 2
                  WHERE id = $1</sql>
    <alias />
  </endProcess>
  <generateJournal>
    <sql />
    <alias />
  </generateJournal>
  <print></print>
</VFPData>
